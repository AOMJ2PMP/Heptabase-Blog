{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\nimport useHash from \"../hooks/useHash\";\nimport Container from '../components/Container';\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer';\nimport '../index.css';\nimport 'github-markdown-css';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\n\n// 文章页面\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    slug\n  } = useParams();\n  const useScrollToTop = () => {\n    _s();\n    //注意自定义Hooks要用useXXX定义\n    const {\n      pathname\n    } = useLocation();\n    useEffect(() => {\n      console.log('pathname change');\n      console.log('useScrollToTop');\n      console.log(window.history);\n      window.history.scrollRestoration = 'manual';\n\n      // 根据跳转类型来决定是否要定位到顶部，如果不是点击 span 或 backLink 则不回到顶部\n\n      let nav_type = sessionStorage.getItem('nav_type');\n      if (nav_type > -1) {\n        // 点击了 span 或 backLink\n\n        setTimeout(() => {\n          window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'auto'\n          });\n        }, 10);\n\n        // window.scrollTo(0, 0);\n\n        // 重置 nav_type\n        sessionStorage.setItem('nav_type', -1);\n      } else {\n        // 返回上一页\n        setTimeout(() => {\n          window.scrollTo({\n            top: sessionStorage.getItem('scrollY'),\n            left: 0,\n            behavior: 'auto'\n          });\n\n          // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n        }, 10);\n\n        // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n      }\n    }, [pathname]);\n  };\n\n  // useScrollToTop();\n\n  // 处理 hash\n  _s(useScrollToTop, \"+8VPq4+XDMjo/kjL3WLkbwU2Amg=\", false, function () {\n    return [useLocation];\n  });\n  const [hash, setHash] = useHash();\n  // 记录数据加载状态\n  let [isLoading, setLoadingState] = useState(true);\n  // 记录数据\n  let [cards, setCards] = useState([]);\n\n  // 页面载入\n  useEffect(() => {\n    // console.log('scrollTo(0, 0)');\n    // window.scrollTo(0, 0);\n    console.log('Post useEffect');\n    // 获取 url\n    console.log(slug);\n    // 获取数据\n    console.log(cards);\n    setContent(slug);\n  });\n\n  // hash 变化时\n  useEffect(() => {\n    // console.log('scrollTo(0, 0)');\n    // window.scrollTo(0, 0);\n    console.log('hash change useEffect');\n  }, [hash]);\n\n  // 获取文章数据、处理文章数据\n  const setContent = id => {\n    console.log('setContent');\n\n    // 存储数据的变量\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      let new_card = null;\n      console.log('Container setContent for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          cards.push(new_card);\n          setCards(cards);\n          setLoadingState(false);\n          break;\n        }\n      }\n\n      // 404\n      if (new_card == null) {\n        console.log('404');\n        window.location = '/404';\n      }\n    });\n  };\n  document.title = props.title;\n  console.log(cards);\n  // let container_list = cards.map((card)=>{\n  //     <Container card={card} />  \n  // })\n\n  let container_list;\n  for (let i = 0; i < cards.length; i++) {\n    console.log(cards[i]);\n    container_list += /*#__PURE__*/_jsxDEV(Container, {\n      card: cards[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }, this);\n  }\n  console.log(container_list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), container_list, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 12\n  }, this);\n}\n_s2(Post, \"RWA8ce06qxBgrDnUDRN1J+VOVf0=\", false, function () {\n  return [useParams, useHash];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Link","useParams","useLocation","useHash","Container","Nav","Footer","getHeptabaseData","getClearCard","getClearImag","Post","props","slug","useScrollToTop","pathname","console","log","window","history","scrollRestoration","nav_type","sessionStorage","getItem","setTimeout","scrollTo","top","left","behavior","setItem","hash","setHash","isLoading","setLoadingState","cards","setCards","setContent","id","heptabase_blog_data","then","res","data","new_card","i","length","push","location","document","title","container_list"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\n\nimport useHash from \"../hooks/useHash\";\n\nimport Container from '../components/Container'\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer'\n\nimport '../index.css'\nimport 'github-markdown-css'\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n// 文章页面\nfunction Post(props) {\n    let { slug } = useParams();\n\n\n    const useScrollToTop = () => {   //注意自定义Hooks要用useXXX定义\n        const { pathname } = useLocation();\n        useEffect(() => {\n\n            console.log('pathname change');\n\n            console.log('useScrollToTop');\n\n            console.log(window.history);\n            window.history.scrollRestoration = 'manual';\n\n            // 根据跳转类型来决定是否要定位到顶部，如果不是点击 span 或 backLink 则不回到顶部\n\n            let nav_type = sessionStorage.getItem('nav_type')\n\n            if (nav_type > -1) {\n                // 点击了 span 或 backLink\n\n                setTimeout(() => {\n                    window.scrollTo({\n                        top:0,\n                        left:0,\n                        behavior:'auto'\n                    });\n                }, 10);\n\n                // window.scrollTo(0, 0);\n\n                // 重置 nav_type\n                sessionStorage.setItem('nav_type', -1)\n            } else {\n\n                // 返回上一页\n                setTimeout(() => {\n\n                    window.scrollTo({\n                        top:sessionStorage.getItem('scrollY'),\n                        left:0,\n                        behavior:'auto'\n                    });\n\n                    // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n\n                }, 10);\n\n                // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n\n\n            }\n\n\n        }, [pathname]);\n    }\n\n    // useScrollToTop();\n\n    // 处理 hash\n    const [hash, setHash] = useHash();\n    // 记录数据加载状态\n    let [isLoading, setLoadingState] = useState(true)\n    // 记录数据\n    let [cards,setCards] = useState([])\n\n    // 页面载入\n    useEffect(() => {\n        // console.log('scrollTo(0, 0)');\n        // window.scrollTo(0, 0);\n        console.log('Post useEffect');\n        // 获取 url\n        console.log(slug);\n        // 获取数据\n        console.log(cards);\n        setContent(slug)\n\n    })\n\n\n    // hash 变化时\n    useEffect(() => {\n        // console.log('scrollTo(0, 0)');\n        // window.scrollTo(0, 0);\n        console.log('hash change useEffect');\n\n    },[hash])\n\n    // 获取文章数据、处理文章数据\n    const setContent = (id) => {\n        console.log('setContent');\n\n        // 存储数据的变量\n        let heptabase_blog_data\n\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            let new_card = null\n            console.log('Container setContent for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n                    \n                    cards.push(new_card)\n                    setCards(cards)\n                    setLoadingState(false)\n                    break;\n                }\n            }\n\n            // 404\n            if (new_card == null) {\n                console.log('404');\n                window.location = '/404'\n            }\n        })\n\n    }\n\n    document.title = props.title\n    console.log(cards);\n    // let container_list = cards.map((card)=>{\n    //     <Container card={card} />  \n    // })\n\n    let container_list\n    for(let i =0;i<cards.length;i++){\n        console.log(cards[i]);\n        container_list+=<Container card={cards[i]} />  \n    }\n\n    console.log(container_list);\n\n    return <div>\n\n        <div>\n            <Nav />\n            {container_list}\n            <Footer />\n        </div>\n    </div>;\n\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}