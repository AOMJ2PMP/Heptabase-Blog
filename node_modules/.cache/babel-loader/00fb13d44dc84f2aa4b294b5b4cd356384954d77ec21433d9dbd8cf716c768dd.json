{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\";\nimport React from 'react';\nimport Nav from '../components/Nav';\nimport '../index.css';\nimport { Link } from 'react-router-dom';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n      backLinks: [],\n      isLoading: true\n    };\n  }\n  componentWillMount() {\n    //console.log(this.props.location)//传递过来的所有参数\n    // console.log(this.props.location.state.key)//val值\n\n    window.addEventListener('hashChange', () => {\n      console.log('hashChange');\n    });\n    console.log('Post componentWillMount:');\n    console.log(this.props);\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      console.log(res);\n      //获取 URL 中的文章 ID\n      let post_id = window.location.pathname.replace('/post/', '');\n      console.log('Post componentWillMount for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == post_id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          console.log('backLinks:');\n          console.log(new_card['backLinks']);\n          this.setState({\n            content: heptabase_blog_data.cards[i]['content'],\n            backLinks: new_card['backLinks'],\n            isLoading: false\n          });\n          break;\n        }\n      }\n    });\n\n    // this.props.history.listen = () => {\n    //     console.log(this.props.history);\n    // }\n  }\n\n  componentWillReceiveProps() {\n    console.log('componentWillReceiveProps');\n  }\n  render() {\n    console.log('Post render');\n    // console.log(this.state.backLinks);\n\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loaidng...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n    } else {\n      let card_text = this.state.content;\n      var showdown = require('showdown'),\n        converter = new showdown.Converter(),\n        text = card_text,\n        html = converter.makeHtml(text);\n      // console.log(html);\n\n      // 反向链接\n      let backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }, this);\n      if (this.state.backLinks.length > 0) {\n        let backLinks = this.state.backLinks.map(backLink => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/post/' + backLink.id,\n            children: backLink.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, backLink.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this));\n        backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backLinks\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: \"Link to this page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: backLinks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this);\n      }\n\n      // 滚动到顶部\n      window.scrollTo(0, 0);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            dangerouslySetInnerHTML: {\n              __html: html\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), backLinksBox]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default Post;","map":{"version":3,"names":["React","Nav","Link","getHeptabaseData","getClearCard","getClearImag","Post","Component","constructor","props","state","content","backLinks","isLoading","componentWillMount","window","addEventListener","console","log","heptabase_blog_data","then","res","data","post_id","location","pathname","replace","i","cards","length","new_card","setState","componentWillReceiveProps","render","card_text","showdown","require","converter","Converter","text","html","makeHtml","backLinksBox","map","backLink","id","title","scrollTo","__html"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["import React from 'react';\nimport Nav from '../components/Nav';\nimport '../index.css'\nimport { Link } from 'react-router-dom';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n\n\nclass Post extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { content: '', backLinks: [], isLoading: true };\n    }\n\n    componentWillMount() {\n        //console.log(this.props.location)//传递过来的所有参数\n        // console.log(this.props.location.state.key)//val值\n\n        window.addEventListener('hashChange',()=>{\n            console.log('hashChange');\n        })\n\n        console.log('Post componentWillMount:');\n        console.log(this.props);\n\n        let heptabase_blog_data\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            console.log(res);\n            //获取 URL 中的文章 ID\n            let post_id = window.location.pathname.replace('/post/', '')\n            console.log('Post componentWillMount for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == post_id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n\n                    console.log('backLinks:');\n                    console.log(new_card['backLinks']);\n\n                    this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false })\n                    break;\n                }\n            }\n        })\n\n\n        // this.props.history.listen = () => {\n        //     console.log(this.props.history);\n        // }\n\n    }\n\n    componentWillReceiveProps(){\n        console.log('componentWillReceiveProps');\n    }\n\n    render() {\n\n\n        console.log('Post render');\n        // console.log(this.state.backLinks);\n\n        if (this.state.isLoading) {\n            return <div>Loaidng...</div>\n        } else {\n            let card_text = this.state.content\n\n\n\n\n            var showdown = require('showdown'),\n                converter = new showdown.Converter(),\n                text = card_text,\n                html = converter.makeHtml(text);\n            // console.log(html);\n\n            // 反向链接\n            let backLinksBox = <div></div>\n            if (this.state.backLinks.length > 0) {\n                let backLinks = this.state.backLinks.map((backLink) =>\n                    <li key={backLink.id} >\n                        <Link to={'/post/'+backLink.id} >\n                            {backLink.title}\n                        </Link>\n                    </li>\n                )\n\n                backLinksBox = <div className='backLinks'>\n                    <header>Link to this page</header>\n                    <ul>\n                        {backLinks}\n                    </ul>\n                </div>\n            }\n\n\n            // 滚动到顶部\n            window.scrollTo(0, 0);\n\n            return (\n                <div>\n                    <Nav />\n                    <div className='container'>\n\n                        <article dangerouslySetInnerHTML={{ __html: html }}></article>\n                        {backLinksBox}\n\n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}