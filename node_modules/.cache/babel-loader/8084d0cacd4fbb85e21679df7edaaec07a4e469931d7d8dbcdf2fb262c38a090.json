{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nconst useHash = () => {\n  _s();\n  const [hash, setHash] = useState(() => window.location.hash);\n\n  // 当hash发生变化时\n  const handleChangeEvent = useCallback(() => {\n    setHash(window.location.hash);\n  }, []);\n  useEffect(() => {\n    // 监听 hashchange ，当 hash 发生变化时执行\n    window.addEventListener(\"hashchange\", handleChangeEvent);\n    // 组件卸载时将监听事件进行移除\n    return () => {\n      window.removeEventListener(\"hashchange\", handleChangeEvent);\n    };\n  }, []);\n\n  // 更新 hash\n  const updateHash = useCallback(newHash => {\n    // 只有当新输入的 hash 跟原有的 hanh 不一致时才进行更新\n    if (newHash !== hash) {\n      window.location.hash = newHash;\n    }\n  }, [hash]);\n\n  // 将当前的 hash 和 updateHash 暴露出去给外面进行使用\n  return [hash, updateHash];\n};\n_s(useHash, \"n91QXJKJxieSksU8a33woW4skcE=\");\nexport default useHash;","map":{"version":3,"names":["useState","useCallback","useEffect","useHash","hash","setHash","window","location","handleChangeEvent","addEventListener","removeEventListener","updateHash","newHash"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/hooks/useHash/index.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n\nconst useHash = () => {\n    const [hash, setHash] = useState(() => window.location.hash);\n\n    // 当hash发生变化时\n    const handleChangeEvent = useCallback(() => {\n        setHash(window.location.hash);\n    }, []);\n\n    useEffect(() => {\n        // 监听 hashchange ，当 hash 发生变化时执行\n        window.addEventListener(\"hashchange\", handleChangeEvent);\n        // 组件卸载时将监听事件进行移除\n        return () => {\n            window.removeEventListener(\"hashchange\", handleChangeEvent);\n        };\n    }, []);\n\n    // 更新 hash\n    const updateHash = useCallback(\n        (newHash) => {\n            // 只有当新输入的 hash 跟原有的 hanh 不一致时才进行更新\n            if (newHash !== hash) {\n                window.location.hash = newHash;\n            }\n        }, [hash]\n    );\n\n    // 将当前的 hash 和 updateHash 暴露出去给外面进行使用\n    return [hash, updateHash];\n};\n\nexport default useHash;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAExD,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,MAAMM,MAAM,CAACC,QAAQ,CAACH,IAAI,CAAC;;EAE5D;EACA,MAAMI,iBAAiB,GAAGP,WAAW,CAAC,MAAM;IACxCI,OAAO,CAACC,MAAM,CAACC,QAAQ,CAACH,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAENF,SAAS,CAAC,MAAM;IACZ;IACAI,MAAM,CAACG,gBAAgB,CAAC,YAAY,EAAED,iBAAiB,CAAC;IACxD;IACA,OAAO,MAAM;MACTF,MAAM,CAACI,mBAAmB,CAAC,YAAY,EAAEF,iBAAiB,CAAC;IAC/D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,UAAU,GAAGV,WAAW,CACzBW,OAAO,IAAK;IACT;IACA,IAAIA,OAAO,KAAKR,IAAI,EAAE;MAClBE,MAAM,CAACC,QAAQ,CAACH,IAAI,GAAGQ,OAAO;IAClC;EACJ,CAAC,EAAE,CAACR,IAAI,CAAC,CACZ;;EAED;EACA,OAAO,CAACA,IAAI,EAAEO,UAAU,CAAC;AAC7B,CAAC;AAAC,GA7BIR,OAAO;AA+Bb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}