{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport Nav from '../components/Nav';\nimport '../index.css';\n// import { Link } from 'react-router-dom';\n\nimport Home from './Home';\nimport Empty from './404';\nimport About from './About';\nimport 'github-markdown-css';\nimport ReactMarkdown from 'https://esm.sh/react-markdown@7';\nimport remarkGfm from 'https://esm.sh/remark-gfm@3';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let [isLoading, setLoadingState] = useState(true);\n  let [card, setCard] = useState('card');\n  let [heptabase_data, setHeptabaseData] = useState('heptabase_data');\n  let {\n    slug\n  } = useParams();\n  const setContent = id => {\n    console.log('setContent');\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      console.log(res);\n      //获取 URL 中的文章 ID\n\n      console.log('Post setContent for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          console.log('backLinks:');\n          console.log(new_card['backLinks']);\n          console.log(new_card);\n\n          // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n          setHeptabaseData(heptabase_blog_data);\n          setCard(new_card);\n          setLoadingState(false);\n          break;\n        }\n      }\n\n      // 404\n    });\n  };\n\n  const handleBackLinkClick = id => {\n    console.log('handleBackLinkClick');\n    console.log(id);\n    if (id != this.state.old_post_id) {\n      this.setState({\n        new_post_id: id\n      });\n    }\n\n    // console.log(event);\n  };\n\n  // setContent(slug)\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    //设置页面内容\n    console.log(card);\n    if (card != 'card') {\n      if (card['card']['id'] != slug) {\n        setContent(slug);\n      }\n    }\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: setContent(slug),\n      children: \"Loaindg..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  } else {\n    console.log(slug);\n    console.log(card);\n\n    // md 转 HTML\n    // var showdown = require('showdown'),\n    //     converter = new showdown.Converter(),\n    //     html = converter.makeHtml(card['card']['content']);\n    // console.log(html);\n    // setCard(slug)\n\n    // 反向链接\n    let backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 28\n    }, this);\n    console.log(card['backLinks']);\n    if (card['backLinks'].length > 0) {\n      let backLinks = card['backLinks'].map(backLink => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/post/' + backLink.id\n          },\n          children: backLink.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, backLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this));\n      backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-body backLinks\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Link to this page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: backLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 28\n      }, this);\n    }\n    const mm = `\n        \n        A paragraph with *emphasis* and **strong importance**.\n\n        > A block quote with ~strikethrough~ and a URL: https://reactjs.org.\n        \n        * Lists\n        * [ ] todo\n        * [x] done\n        ~~this is~~\n\n        A table:\n        \n        | a | b |\n        | - | - |\n\n\n        `;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"markdown-body container\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: card['card']['content'],\n              remarkPlugins: [remarkGfm, {\n                singleTilde: false\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), backLinksBox]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n  }\n\n  // return (\n  //     <div>Post</div>\n  // )\n}\n_s(Post, \"06xw/8AbmeZz52IBl4EGu/jz1yo=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","useParams","Nav","Home","Empty","About","ReactMarkdown","remarkGfm","getHeptabaseData","getClearCard","getClearImag","Post","isLoading","setLoadingState","card","setCard","heptabase_data","setHeptabaseData","slug","setContent","id","console","log","heptabase_blog_data","then","res","data","i","cards","length","new_card","handleBackLinkClick","state","old_post_id","setState","new_post_id","backLinksBox","backLinks","map","backLink","pathname","title","mm","singleTilde"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport Nav from '../components/Nav';\nimport '../index.css'\n// import { Link } from 'react-router-dom';\n\nimport Home from './Home';\nimport Empty from './404';\nimport About from './About';\n\nimport 'github-markdown-css'\n\nimport ReactMarkdown from 'https://esm.sh/react-markdown@7'\nimport remarkGfm from 'https://esm.sh/remark-gfm@3'\n\n\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n\nfunction Post() {\n    let [isLoading, setLoadingState] = useState(true)\n    let [card, setCard] = useState('card');\n    let [heptabase_data, setHeptabaseData] = useState('heptabase_data');\n    let { slug } = useParams();\n\n    const setContent = (id) => {\n        console.log('setContent');\n        let heptabase_blog_data\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            console.log(res);\n            //获取 URL 中的文章 ID\n\n            console.log('Post setContent for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n\n                    console.log('backLinks:');\n                    console.log(new_card['backLinks']);\n                    console.log(new_card);\n\n                    // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n                    setHeptabaseData(heptabase_blog_data)\n                    setCard(new_card)\n                    setLoadingState(false)\n                    break;\n                }\n            }\n\n            // 404\n        })\n\n    }\n\n    const handleBackLinkClick = (id) => {\n        console.log('handleBackLinkClick');\n        console.log(id);\n\n        if (id != this.state.old_post_id) {\n            this.setState({\n                new_post_id: id\n            })\n        }\n\n        // console.log(event);\n    }\n\n    // setContent(slug)\n\n    useEffect(() => {\n\n        console.log('useEffect');\n\n        //设置页面内容\n        console.log(card);\n        if (card != 'card') {\n            if (card['card']['id'] != slug) {\n                setContent(slug)\n            }\n        }\n\n    });\n\n\n    if (isLoading) {\n        return <div onClick={setContent(slug)}>Loaindg..</div>\n    } else {\n        console.log(slug);\n        console.log(card);\n\n        // md 转 HTML\n        // var showdown = require('showdown'),\n        //     converter = new showdown.Converter(),\n        //     html = converter.makeHtml(card['card']['content']);\n        // console.log(html);\n        // setCard(slug)\n\n        // 反向链接\n        let backLinksBox = <div></div>\n        console.log(card['backLinks']);\n        if (card['backLinks'].length > 0) {\n            let backLinks = card['backLinks'].map((backLink) =>\n                <li key={backLink.id} >\n                    <Link to={{ pathname: '/post/' + backLink.id }} >\n                        {/* <span onClick={this.handleBackLinkClick.bind(Event, backLink.id)}> */}\n                        {backLink.title}\n                        {/* </span> */}\n                    </Link>\n                </li>\n            )\n\n            backLinksBox = <div className='markdown-body backLinks'>\n                <header>Link to this page</header>\n                <ul>\n                    {backLinks}\n                </ul>\n            </div>\n        }\n\n        const mm = `\n        \n        A paragraph with *emphasis* and **strong importance**.\n\n        > A block quote with ~strikethrough~ and a URL: https://reactjs.org.\n        \n        * Lists\n        * [ ] todo\n        * [x] done\n        ~~this is~~\n\n        A table:\n        \n        | a | b |\n        | - | - |\n\n\n        `\n\n        return <div>\n\n            <div>\n                <Nav />\n                <div className='markdown-body container'>\n\n                    {/* <article dangerouslySetInnerHTML={{ __html: html }}></article>\n                    {backLinksBox} */}\n\n                    <article><ReactMarkdown children={card['card']['content']} remarkPlugins={[remarkGfm, { singleTilde: false }]} /></article>\n                    {backLinksBox}\n\n                </div>\n\n            </div>\n        </div>;\n    }\n\n\n    // return (\n    //     <div>Post</div>\n    // )\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}