{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/components/Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport '../index.css';\nimport 'github-markdown-css';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\n\n// 文章正文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container(props) {\n  _s();\n  // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n  let post = useRef(null);\n\n  // 当前路径信息\n  let path = window.location.pathname;\n\n  // 路径中包含的 post id，用以获取文章 md 信息\n  let path_id;\n  if (path.indexOf('/post/') < 0) {\n    // 若路径中不含 post id，则取父组件的 props\n    path_id = props.post_id;\n  } else {\n    path_id = path.replace('/post/', '');\n  }\n\n  // 记录数据加载状态\n  let [isLoading, setLoadingState] = useState(true);\n\n  // 记录当前文章的 ID\n  let [thisPageId, setPageID] = useState('');\n\n  // 记录自定义的 Link 数据，用来实现 DOM 链接的间接跳转\n  let [my_link, setLink] = useState('');\n\n  // 记录当前文章对应的卡片信息\n  let [card, setCard] = useState('card');\n\n  // 如果当前页面 ID 为空则获取数据\n  if (thisPageId == '') {\n    setPageID(props.post_id);\n  }\n\n  // 如果是移动端则增加图片的尺寸\n  let isMobile = navigator.userAgent.match(/Mobile/i);\n  let mobileSkale = 1;\n  if (isMobile) {\n    mobileSkale = 2;\n  }\n\n  // 获取文章数据、处理文章数据\n  const setContent = id => {\n    console.log('setContent');\n    setLoadingState(true);\n    // 存储数据的变量\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      let new_card = null;\n      console.log('Container setContent for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          setCard(new_card);\n          setLoadingState(false);\n          break;\n        }\n      }\n\n      // 404\n      if (new_card == null) {\n        console.log('404');\n        window.location = '/404';\n      }\n    });\n  };\n  const handleBackLinkClick = () => {\n    console.log('handleBackLinkClick');\n  };\n\n  // 组件生命周期，组件载入、更新时将触发此函数\n  useEffect(() => {\n    console.log('useEffect');\n\n    //设置页面内容\n    if (card === 'card') {\n      // 如果 card 无内容，则获取数据\n      setContent(path_id);\n    } else {\n      if (card['card']['id'] !== path_id) {\n        // 如果 card 的 ID 与当前 URL 中的 ID 不一致\n        console.log('useEffect setContent');\n        // 获取新 URL 中的文章 ID 对应的 md 数据\n        setContent(path_id);\n        // 清空旧页面的自定义链接\n        setLink('');\n      }\n    }\n\n    // dom 加载完毕后\n    if (post.current != null && card['card']['id'] == path_id) {\n      // 设置 img 的尺寸\n      let article_img = document.getElementsByTagName('img');\n      console.log(article_img);\n      for (let i = 0; i < article_img.length; i++) {\n        let width_key_index = article_img[i]['alt'].indexOf('{{width ');\n        if (width_key_index > -1) {\n          let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length);\n          img_width = img_width.replace('{{width ', '');\n          img_width = img_width.replace('}}', '');\n          article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%');\n          article_img[i].style.display = 'block';\n          article_img[i].style.margin = '0 auto';\n        }\n      }\n\n      // 设置 a 链接的点击事件，将 a 按照 Link 的方式进行跳转，避免页面不必要的刷新\n      let article_link = document.getElementsByTagName('span');\n      console.log(article_link);\n      let links = [];\n      for (let i = 0; i < article_link.length; i++) {\n        if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n          // 如果 DOM 中的元素**不**包含 path 属性，则跳过（有 path 属性的元素才需要处理）\n          continue;\n        }\n\n        // 创建 Link 元素，当点击上述 span 原生时，将触发 Link 元素的点击事件\n        let link_temp = /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link_temp\",\n          to: article_link[i].getAttribute('path'),\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }, this);\n        links.push(link_temp);\n\n        // DOM 中的特定元素点击时\n        article_link[i].onclick = () => {\n          console.log('a click');\n\n          // 获取元素的 path 参数，提取 post id\n          let post_id = article_link[i].getAttribute('path').replace('/post/', '');\n          console.log(post_id);\n\n          // 获取自定义的 Link 元素\n          let my_links = document.getElementsByClassName('link_temp');\n          for (let j = 0; j < my_links.length; j++) {\n            console.log(my_links[j]);\n            console.log(my_links[j].href);\n\n            // 如果自定义的 Link 的 href 属性中包含 元素 path 属性的值，则可匹配\n            if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n              // 点击\n              my_links[j].click();\n              // 页面滚动到顶部\n              window.scrollTo(0, 0);\n              break;\n            }\n          }\n        };\n      }\n\n      // 设置自定义 Link 并渲染到 DOM 中\n      if (my_link == '' && links.length > 0) {\n        setLink(links);\n      }\n    }\n  });\n\n  // return <div className='loading'><div>🚀 Loading...</div></div>\n\n  // 加载中\n  if (isLoading) {\n    console.log('isLoading');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 16\n    }, this);\n  } else {\n    let links = [];\n\n    // 反向链接\n    let backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-body backLinks\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"\\uD83D\\uDD17LINKS TO THIS PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"\\uD83D\\uDC7B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 28\n    }, this);\n    if (card['backLinks'].length > 0) {\n      let backLinks = card['backLinks'].map(backLink => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/post/' + backLink.id\n          },\n          onclick: handleBackLinkClick,\n          children: backLink.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, backLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this));\n      backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-body backLinks\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"\\uD83D\\uDD17LINKS TO THIS PAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: backLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 28\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: post,\n          className: \"markdown-body container\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: card['card']['content'],\n              rehypePlugins: [rehypeRaw],\n              remarkPlugins: [remarkGfm, {\n                singleTilde: false\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTime\",\n            children: [/*#__PURE__*/_jsxDEV(\"time\", {\n              children: [\"Created \", format(new Date(card['card']['createdTime']), 'yyyy-MM-dd')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n              children: card['card']['lastEditedTimeDiff']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this), backLinksBox, /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              display: 'none'\n            },\n            children: my_link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(Container, \"3kp/W1mspAM6Tc3r6CziXjlq/lQ=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useUrlState","BrowserRouter","Router","Routes","Route","Link","useParams","format","ReactMarkdown","remarkGfm","rehypeRaw","getHeptabaseData","getClearCard","getClearImag","Container","props","post","path","window","location","pathname","path_id","indexOf","post_id","replace","isLoading","setLoadingState","thisPageId","setPageID","my_link","setLink","card","setCard","isMobile","navigator","userAgent","match","mobileSkale","setContent","id","console","log","heptabase_blog_data","then","res","data","new_card","i","cards","length","handleBackLinkClick","current","article_img","document","getElementsByTagName","width_key_index","img_width","substring","setAttribute","Number","toString","style","display","margin","article_link","links","getAttribute","undefined","link_temp","push","onclick","my_links","getElementsByClassName","j","href","click","scrollTo","backLinksBox","backLinks","map","backLink","title","singleTilde","Date"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Container.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport { format } from 'date-fns'\n\nimport '../index.css'\nimport 'github-markdown-css'\n\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport rehypeRaw from 'rehype-raw'\n\n\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n\n// 文章正文\nfunction Container(props) {\n\n    // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n    let post = useRef(null);\n\n    // 当前路径信息\n    let path = window.location.pathname\n\n    // 路径中包含的 post id，用以获取文章 md 信息\n    let path_id\n    if (path.indexOf('/post/') < 0) {\n\n        // 若路径中不含 post id，则取父组件的 props\n        path_id = props.post_id\n\n    } else {\n        path_id = path.replace('/post/', '')\n    }\n\n\n    // 记录数据加载状态\n    let [isLoading, setLoadingState] = useState(true)\n\n    // 记录当前文章的 ID\n    let [thisPageId, setPageID] = useState('')\n\n    // 记录自定义的 Link 数据，用来实现 DOM 链接的间接跳转\n    let [my_link, setLink] = useState('');\n\n    // 记录当前文章对应的卡片信息\n    let [card, setCard] = useState('card');\n\n    // 如果当前页面 ID 为空则获取数据\n    if (thisPageId == '') {\n        setPageID(props.post_id)\n    }\n\n    // 如果是移动端则增加图片的尺寸\n    let isMobile = navigator.userAgent.match(/Mobile/i)\n    let mobileSkale = 1\n    if (isMobile) {\n        mobileSkale = 2\n    }\n\n    // 获取文章数据、处理文章数据\n    const setContent = (id) => {\n        console.log('setContent');\n        setLoadingState(true)\n        // 存储数据的变量\n        let heptabase_blog_data\n\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            let new_card = null\n            console.log('Container setContent for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n\n                    setCard(new_card)\n                    setLoadingState(false)\n                    break;\n                }\n            }\n\n            // 404\n            if (new_card == null) {\n                console.log('404');\n                window.location = '/404'\n            }\n        })\n\n    }\n\n    const handleBackLinkClick = () =>{\n        console.log('handleBackLinkClick');\n    }\n\n    // 组件生命周期，组件载入、更新时将触发此函数\n    useEffect(() => {\n\n        console.log('useEffect');\n\n        //设置页面内容\n        if (card === 'card') {\n            // 如果 card 无内容，则获取数据\n            setContent(path_id)\n        } else {\n\n\n            if (card['card']['id'] !== path_id) {\n\n                // 如果 card 的 ID 与当前 URL 中的 ID 不一致\n                console.log('useEffect setContent');\n                // 获取新 URL 中的文章 ID 对应的 md 数据\n                setContent(path_id)\n                // 清空旧页面的自定义链接\n                setLink('')\n\n            }\n        }\n\n        // dom 加载完毕后\n        if (post.current != null && card['card']['id'] == path_id) {\n\n            // 设置 img 的尺寸\n            let article_img = document.getElementsByTagName('img');\n            console.log(article_img);\n\n            for (let i = 0; i < article_img.length; i++) {\n                let width_key_index = article_img[i]['alt'].indexOf('{{width ')\n                if (width_key_index > -1) {\n                    let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length)\n                    img_width = img_width.replace('{{width ', '')\n                    img_width = img_width.replace('}}', '')\n\n                    article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%')\n                    article_img[i].style.display = 'block'\n                    article_img[i].style.margin = '0 auto'\n                }\n            }\n\n            // 设置 a 链接的点击事件，将 a 按照 Link 的方式进行跳转，避免页面不必要的刷新\n            let article_link = document.getElementsByTagName('span');\n            console.log(article_link);\n            let links = []\n\n            for (let i = 0; i < article_link.length; i++) {\n\n\n                if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n                    // 如果 DOM 中的元素**不**包含 path 属性，则跳过（有 path 属性的元素才需要处理）\n                    continue\n                }\n\n                // 创建 Link 元素，当点击上述 span 原生时，将触发 Link 元素的点击事件\n                let link_temp = <Link className='link_temp' to={article_link[i].getAttribute('path')}>Link</Link>\n                links.push(link_temp)\n\n\n                // DOM 中的特定元素点击时\n                article_link[i].onclick = () => {\n                    console.log('a click');\n\n                    // 获取元素的 path 参数，提取 post id\n                    let post_id = article_link[i].getAttribute('path').replace('/post/', '')\n                    console.log(post_id);\n\n                    // 获取自定义的 Link 元素\n                    let my_links = document.getElementsByClassName('link_temp')\n\n                    for (let j = 0; j < my_links.length; j++) {\n                        console.log(my_links[j]);\n                        console.log(my_links[j].href);\n\n                        // 如果自定义的 Link 的 href 属性中包含 元素 path 属性的值，则可匹配\n                        if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n\n                            // 点击\n                            my_links[j].click()\n                            // 页面滚动到顶部\n                            window.scrollTo(0, 0);\n\n                            break\n                        }\n                    }\n\n                }\n            }\n\n            // 设置自定义 Link 并渲染到 DOM 中\n            if (my_link == '' && links.length > 0) {\n                setLink(links)\n            }\n\n        }\n\n    });\n\n\n    // return <div className='loading'><div>🚀 Loading...</div></div>\n\n    // 加载中\n    if (isLoading) {\n        console.log('isLoading');\n        return <div className='loading'><div></div></div>\n    } else {\n\n\n        let links = []\n\n        // 反向链接\n        let backLinksBox = <div className='markdown-body backLinks'>\n            <header>🔗LINKS TO THIS PAGE</header>\n            <ul>\n                👻\n            </ul>\n        </div>\n\n        if (card['backLinks'].length > 0) {\n            let backLinks = card['backLinks'].map((backLink) =>\n                <li key={backLink.id} >\n                    <Link to={{ pathname: '/post/' + backLink.id }} onclick={handleBackLinkClick}>\n                        {/* <span onClick={this.handleBackLinkClick.bind(Event, backLink.id)}> */}\n                        {backLink.title}\n                        {/* </span> */}\n                    </Link>\n                </li>\n            )\n\n            backLinksBox = <div className='markdown-body backLinks'>\n                <header>🔗LINKS TO THIS PAGE</header>\n                <ul>\n                    {backLinks}\n                </ul>\n            </div>\n        }\n\n\n\n        return <div>\n\n            <div>\n\n\n                <div ref={post} className='markdown-body container'>\n\n                    <article><ReactMarkdown children={card['card']['content']} rehypePlugins={[rehypeRaw]} remarkPlugins={[remarkGfm, { singleTilde: false }]} /></article>\n                    <div className='postTime'>\n                        <time>Created {format(new Date(card['card']['createdTime']), 'yyyy-MM-dd')}</time>\n                        <time>{card['card']['lastEditedTimeDiff']}</time>\n                    </div>\n                    {/* /反向链接 */}\n                    {backLinksBox}\n                    <ul style={{ display: 'none' }}>{my_link}</ul>\n\n\n                </div>\n            </div>\n        </div>;\n    }\n\n}\n\nexport default Container;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}