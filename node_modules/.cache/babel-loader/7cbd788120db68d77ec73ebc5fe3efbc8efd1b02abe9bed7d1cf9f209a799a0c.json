{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams, useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\nimport Container from '../components/Container';\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer';\nimport '../index.css';\nimport 'github-markdown-css';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\n\n// 文章页面\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    slug\n  } = useParams();\n  // 记录当前文章对应的卡片信息\n  let [card, setCard] = useState(null);\n  // 记录数据加载状态\n  let [isLoading, setLoadingState] = useState(true);\n  console.log(slug);\n  console.log(window.location);\n  window.location = window.location + '&note-id=b81a2f54-ec5b-4de0-9e97-ab841c0e18f9';\n  console.log(window.location);\n  const useScrollToTop = () => {\n    _s();\n    //注意自定义Hooks要用useXXX定义\n    const {\n      pathname\n    } = useLocation();\n    useEffect(() => {\n      console.log('useScrollToTop');\n      console.log(window.history);\n      window.history.scrollRestoration = 'manual';\n\n      // 根据跳转类型来决定是否要定位到顶部，如果不是点击 span 或 backLink 则不回到顶部\n\n      let nav_type = sessionStorage.getItem('nav_type');\n      if (nav_type > -1) {\n        // 点击了 span 或 backLink\n\n        setTimeout(() => {\n          window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'auto'\n          });\n        }, 10);\n\n        // window.scrollTo(0, 0);\n\n        // 重置 nav_type\n        sessionStorage.setItem('nav_type', -1);\n      } else {\n        // 返回上一页\n        setTimeout(() => {\n          window.scrollTo({\n            top: sessionStorage.getItem('scrollY'),\n            left: 0,\n            behavior: 'auto'\n          });\n\n          // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n        }, 10);\n\n        // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n      }\n    }, [pathname]);\n  };\n  _s(useScrollToTop, \"+8VPq4+XDMjo/kjL3WLkbwU2Amg=\", false, function () {\n    return [useLocation];\n  });\n  useScrollToTop();\n  // useReStoreScrollTop();\n\n  useEffect(() => {\n    // console.log('scrollTo(0, 0)');\n    // window.scrollTo(0, 0);\n    console.log('Post useEffect');\n    // 获取 URL 参数\n\n    // \n  });\n\n  // 获取文章数据、处理文章数据\n  const setContent = id => {\n    console.log('setContent');\n\n    // 如果已经获取过数据，则直接从获取的数据中提取\n    if (card == null) {\n      // 存储数据的变量\n      let heptabase_blog_data;\n      getHeptabaseData.then(res => {\n        heptabase_blog_data = res.data;\n        let new_card = null;\n        console.log('Container setContent for:');\n        for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n          if (heptabase_blog_data.cards[i]['id'] == id) {\n            // 处理内容中的图片\n            heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n            console.log('getClearImag done');\n            // 处理内容中的链接\n            new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n            heptabase_blog_data.cards[i] = new_card['card'];\n\n            // 设置网页标题\n            if (new_card['card']['title'] !== 'About') {\n              document.title = new_card['card']['title'];\n            } else {\n              document.title = 'Jiang 的数字花园🌱';\n            }\n            setCard(new_card);\n            setLoadingState(false);\n            break;\n          }\n        }\n\n        // 404\n        if (new_card == null) {\n          console.log('404');\n          window.location = '/404';\n        }\n      });\n    } else {\n      console.log(card);\n    }\n  };\n\n  // 根据 URL 路径加载数据\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 12\n  }, this);\n}\n_s2(Post, \"96sADa/D/WncKBOA1cfa1hfGryI=\", false, function () {\n  return [useParams, useScrollToTop];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Link","useParams","useNavigate","useLocation","Container","Nav","Footer","getHeptabaseData","getClearCard","getClearImag","Post","props","slug","card","setCard","isLoading","setLoadingState","console","log","window","location","useScrollToTop","pathname","history","scrollRestoration","nav_type","sessionStorage","getItem","setTimeout","scrollTo","top","left","behavior","setItem","setContent","id","heptabase_blog_data","then","res","data","new_card","i","cards","length","document","title"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams, useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\n\nimport Container from '../components/Container'\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer'\n\nimport '../index.css'\nimport 'github-markdown-css'\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n// 文章页面\nfunction Post(props) {\n    let { slug } = useParams();\n    // 记录当前文章对应的卡片信息\n    let [card, setCard] = useState(null);\n    // 记录数据加载状态\n    let [isLoading, setLoadingState] = useState(true)\n\n    console.log(slug);\n    console.log(window.location);\n\n    window.location = window.location+'&note-id=b81a2f54-ec5b-4de0-9e97-ab841c0e18f9'\n    console.log(window.location);\n\n    const useScrollToTop = () => {   //注意自定义Hooks要用useXXX定义\n        const { pathname } = useLocation();\n        useEffect(() => {\n\n            console.log('useScrollToTop');\n\n            console.log(window.history);\n            window.history.scrollRestoration = 'manual';\n\n            // 根据跳转类型来决定是否要定位到顶部，如果不是点击 span 或 backLink 则不回到顶部\n\n            let nav_type = sessionStorage.getItem('nav_type')\n\n            if (nav_type > -1) {\n                // 点击了 span 或 backLink\n\n                setTimeout(() => {\n                    window.scrollTo({\n                        top: 0,\n                        left: 0,\n                        behavior: 'auto'\n                    });\n                }, 10);\n\n                // window.scrollTo(0, 0);\n\n                // 重置 nav_type\n                sessionStorage.setItem('nav_type', -1)\n            } else {\n\n                // 返回上一页\n                setTimeout(() => {\n\n                    window.scrollTo({\n                        top: sessionStorage.getItem('scrollY'),\n                        left: 0,\n                        behavior: 'auto'\n                    });\n\n                    // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n\n                }, 10);\n\n                // window.scrollTo(0, sessionStorage.getItem('scrollY'));\n\n\n            }\n\n\n        }, [pathname]);\n    }\n\n    useScrollToTop();\n    // useReStoreScrollTop();\n\n    useEffect(() => {\n        // console.log('scrollTo(0, 0)');\n        // window.scrollTo(0, 0);\n        console.log('Post useEffect');\n        // 获取 URL 参数\n\n        // \n\n    })\n\n    // 获取文章数据、处理文章数据\n    const setContent = (id) => {\n        console.log('setContent');\n\n        // 如果已经获取过数据，则直接从获取的数据中提取\n        if (card == null) {\n            // 存储数据的变量\n            let heptabase_blog_data\n\n            getHeptabaseData.then((res) => {\n                heptabase_blog_data = res.data\n                let new_card = null\n                console.log('Container setContent for:');\n                for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                    if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                        // 处理内容中的图片\n                        heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                        console.log('getClearImag done');\n                        // 处理内容中的链接\n                        new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                        heptabase_blog_data.cards[i] = new_card['card']\n\n                        // 设置网页标题\n                        if (new_card['card']['title'] !== 'About') {\n                            document.title = new_card['card']['title']\n                        } else {\n                            document.title = 'Jiang 的数字花园🌱'\n                        }\n\n                        setCard(new_card)\n                        setLoadingState(false)\n\n                        break;\n                    }\n                }\n\n                // 404\n                if (new_card == null) {\n                    console.log('404');\n                    window.location = '/404'\n                }\n            })\n        } else {\n            console.log(card);\n        }\n\n\n\n    }\n\n\n    // 根据 URL 路径加载数据\n\n\n\n    return <div>\n\n        <div>\n            <Nav />\n            <Container card={card} />\n            <Footer />\n        </div>\n    </div>;\n\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}