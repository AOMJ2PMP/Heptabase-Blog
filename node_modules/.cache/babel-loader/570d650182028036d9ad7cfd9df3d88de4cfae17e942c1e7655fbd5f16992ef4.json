{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/components/Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport '../index.css';\nimport 'github-markdown-css';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\n\n// 文章正文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container(props) {\n  _s();\n  // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n  let post = useRef(null);\n\n  // 当前路径信息\n  let path = window.location.pathname;\n\n  // 路径中包含的 post id，用以获取文章 md 信息\n  let path_id;\n  if (path.indexOf('/post/') < 0) {\n    // 若路径中不含 post id，则取父组件的 props 的值\n    path_id = props.post_id;\n  } else {\n    path_id = path.replace('/post/', '');\n  }\n\n  // 记录数据是否加载完毕\n  let [isLoading, setLoadingState] = useState(true);\n  let [thisPageId, setPageID] = useState('');\n  let [my_link, setLink] = useState('');\n  let [card, setCard] = useState('card');\n  console.log(card);\n  let [heptabase_data, setHeptabaseData] = useState('heptabase_data');\n  let {\n    slug\n  } = useParams();\n  if (thisPageId == '') {\n    setPageID(props.post_id);\n  }\n  let isMobile = navigator.userAgent.match(/Mobile/i);\n  let mobileSkale = 1;\n  if (isMobile) {\n    mobileSkale = 2;\n  }\n  const setContent = id => {\n    console.log('setContent');\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      console.log('Container setContent for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n\n          // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n          // setHeptabaseData(heptabase_blog_data)\n          setCard(new_card);\n          setLoadingState(false);\n          break;\n        }\n      }\n\n      // 404\n    });\n  };\n\n  const handleBackLinkClick = id => {\n    console.log('handleBackLinkClick');\n\n    // console.log(event);\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    //设置页面内容\n    console.log(card);\n    if (card === 'card') {\n      setContent(path_id);\n    } else {\n      console.log(card['card']['id'] !== path_id);\n      if (card['card']['id'] !== path_id) {\n        console.log('useEffect setContent');\n        setContent(path_id);\n        setLink('');\n\n        // console.log('scrollTo');\n        // window.scrollTo(0, 0);\n      }\n    }\n\n    // dom 加载完毕后\n    if (post.current != null && card['card']['id'] == path_id) {\n      // console.log(post);\n\n      // 设置 img 的尺寸\n      let article_img = document.getElementsByTagName('img');\n      console.log(article_img);\n      for (let i = 0; i < article_img.length; i++) {\n        let width_key_index = article_img[i]['alt'].indexOf('{{width ');\n        if (width_key_index > -1) {\n          let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length);\n          img_width = img_width.replace('{{width ', '');\n          img_width = img_width.replace('}}', '');\n\n          // console.log(img_width);\n          // console.log((Number(img_width.replace('%',''))*mobileSkale).toString());\n\n          article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%');\n          article_img[i].style.display = 'block';\n          article_img[i].style.margin = '0 auto';\n        }\n      }\n\n      // 设置 a 链接的点击事件\n      let article_link = document.getElementsByTagName('span');\n      console.log(article_link);\n      let links = [];\n      for (let i = 0; i < article_link.length; i++) {\n        // console.log(article_link[i]);\n        // console.log(article_link[i].getAttribute('path'));\n\n        if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n          continue;\n        }\n\n        // let new_link = <li><Link className='new_link' to={article_link[i].getAttribute('path')}>newLink</Link></li>\n\n        // links.push(new_link)\n\n        let link_temp = /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link_temp\",\n          to: article_link[i].getAttribute('path'),\n          children: \" Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }, this);\n        links.push(link_temp);\n        article_link[i].onclick = () => {\n          console.log('a click');\n          // console.log(article_link[i].getAttribute('path'));\n\n          let post_id = article_link[i].getAttribute('path').replace('/post/', '');\n          console.log(post_id);\n          let my_links = document.getElementsByClassName('link_temp');\n          console.log(my_links);\n\n          // setThisPageId(post_id)\n          // 修改当前 post id\n          for (let j = 0; j < my_links.length; j++) {\n            console.log(my_links[j]);\n            console.log(my_links[j].href);\n            if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n              my_links[j].click();\n              window.scrollTo(0, 0);\n              break;\n            }\n          }\n\n          // window.location.pathname = article_link[i].getAttribute('path')\n\n          // window.history.pushState(null, null, article_link[i].getAttribute('path'))\n          // setPageID(post_id)\n          // setContent(post_id)\n          // article_link[0].click()\n\n          // new_link.click()\n        };\n      }\n\n      if (my_link == '' && links.length > 0) {\n        setLink(links);\n      }\n    }\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loaindg.. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 16\n    }, this);\n  } else {\n    let links = [];\n\n    // 反向链接\n    let backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-body backLinks\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \" Links to this page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \" \\uD83D\\uDCAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 52\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 28\n    }, this);\n    if (card['backLinks'].length > 0) {\n      let backLinks = card['backLinks'].map(backLink => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/post/' + backLink.id\n          },\n          children: [\" \", \" \", backLink.title, \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), \" \"]\n      }, backLink.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this));\n      backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-body backLinks\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \" Links to this page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", backLinks, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 56\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 28\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: post,\n          className: \"markdown-body container\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: card['card']['content'],\n              rehypePlugins: [rehypeRaw],\n              remarkPlugins: [remarkGfm, {\n                singleTilde: false\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 9\n          }, this), \" \", backLinksBox, \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              display: 'none'\n            },\n            children: [\" \", my_link, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(Container, \"EZ2bsqXSG6vis97f7yanVl8QtRQ=\", false, function () {\n  return [useParams];\n});\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useUrlState","BrowserRouter","Router","Routes","Route","Link","useParams","ReactMarkdown","remarkGfm","rehypeRaw","getHeptabaseData","getClearCard","getClearImag","Container","props","post","path","window","location","pathname","path_id","indexOf","post_id","replace","isLoading","setLoadingState","thisPageId","setPageID","my_link","setLink","card","setCard","console","log","heptabase_data","setHeptabaseData","slug","isMobile","navigator","userAgent","match","mobileSkale","setContent","id","heptabase_blog_data","then","res","data","i","cards","length","new_card","handleBackLinkClick","current","article_img","document","getElementsByTagName","width_key_index","img_width","substring","setAttribute","Number","toString","style","display","margin","article_link","links","getAttribute","undefined","link_temp","push","onclick","my_links","getElementsByClassName","j","href","click","scrollTo","backLinksBox","backLinks","map","backLink","title","singleTilde"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Container.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport '../index.css'\n\nimport 'github-markdown-css'\n\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport rehypeRaw from 'rehype-raw'\n\n\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n\n// 文章正文\nfunction Container(props) {\n\n    // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n    let post = useRef(null);\n\n    // 当前路径信息\n    let path = window.location.pathname\n\n    // 路径中包含的 post id，用以获取文章 md 信息\n    let path_id\n    if (path.indexOf('/post/') < 0) {\n\n        // 若路径中不含 post id，则取父组件的 props 的值\n        path_id = props.post_id\n\n    } else {\n        path_id = path.replace('/post/', '')\n    }\n\n\n    // 记录数据是否加载完毕\n    let [isLoading, setLoadingState] = useState(true)\n    let [thisPageId, setPageID] = useState('')\n\n    let [my_link, setLink] = useState('');\n    let [card, setCard] = useState('card');\n\n    console.log(card);\n    let [heptabase_data, setHeptabaseData] = useState('heptabase_data');\n    let { slug } = useParams();\n\n    if (thisPageId == '') {\n        setPageID(props.post_id)\n    }\n\n\n    let isMobile = navigator.userAgent.match(/Mobile/i)\n    let mobileSkale = 1\n    if (isMobile) {\n        mobileSkale = 2\n    }\n\n\n\n\n\n\n\n    const setContent = (id) => {\n        console.log('setContent');\n        let heptabase_blog_data\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n\n            console.log('Container setContent for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n\n                    // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n                    // setHeptabaseData(heptabase_blog_data)\n                    setCard(new_card)\n                    setLoadingState(false)\n                    break;\n                }\n            }\n\n            // 404\n        })\n\n    }\n\n    const handleBackLinkClick = (id) => {\n        console.log('handleBackLinkClick');\n\n        // console.log(event);\n    }\n\n\n\n    useEffect(() => {\n\n        console.log('useEffect');\n\n        //设置页面内容\n        console.log(card);\n\n\n        if (card === 'card') {\n            setContent(path_id)\n        } else {\n\n            console.log(card['card']['id'] !== path_id);\n\n            if (card['card']['id'] !== path_id) {\n                console.log('useEffect setContent');\n\n\n                setContent(path_id)\n                setLink('')\n\n                // console.log('scrollTo');\n                // window.scrollTo(0, 0);\n            }\n        }\n\n        // dom 加载完毕后\n        if (post.current != null && card['card']['id'] == path_id) {\n            // console.log(post);\n\n            // 设置 img 的尺寸\n            let article_img = document.getElementsByTagName('img');\n            console.log(article_img);\n\n            for (let i = 0; i < article_img.length; i++) {\n                let width_key_index = article_img[i]['alt'].indexOf('{{width ')\n                if (width_key_index > -1) {\n                    let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length)\n                    img_width = img_width.replace('{{width ', '')\n                    img_width = img_width.replace('}}', '')\n\n                    // console.log(img_width);\n                    // console.log((Number(img_width.replace('%',''))*mobileSkale).toString());\n\n                    article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%')\n                    article_img[i].style.display = 'block'\n                    article_img[i].style.margin = '0 auto'\n                }\n            }\n\n            // 设置 a 链接的点击事件\n            let article_link = document.getElementsByTagName('span');\n            console.log(article_link);\n            let links = []\n\n            for (let i = 0; i < article_link.length; i++) {\n                // console.log(article_link[i]);\n                // console.log(article_link[i].getAttribute('path'));\n\n                if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n                    continue\n                }\n\n                // let new_link = <li><Link className='new_link' to={article_link[i].getAttribute('path')}>newLink</Link></li>\n\n                // links.push(new_link)\n\n                let link_temp = < Link className = 'link_temp'\n                to = { article_link[i].getAttribute('path') } > Link < /Link>\n                links.push(link_temp)\n\n\n                article_link[i].onclick = () => {\n                    console.log('a click');\n                    // console.log(article_link[i].getAttribute('path'));\n\n                    let post_id = article_link[i].getAttribute('path').replace('/post/', '')\n                    console.log(post_id);\n\n                    let my_links = document.getElementsByClassName('link_temp')\n                    console.log(my_links);\n\n                    // setThisPageId(post_id)\n                    // 修改当前 post id\n                    for (let j = 0; j < my_links.length; j++) {\n                        console.log(my_links[j]);\n                        console.log(my_links[j].href);\n\n                        if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n                            my_links[j].click()\n\n                            window.scrollTo(0, 0);\n\n                            break\n                        }\n                    }\n\n\n                    // window.location.pathname = article_link[i].getAttribute('path')\n\n                    // window.history.pushState(null, null, article_link[i].getAttribute('path'))\n                    // setPageID(post_id)\n                    // setContent(post_id)\n                    // article_link[0].click()\n\n                    // new_link.click()\n\n                }\n            }\n\n            if (my_link == '' && links.length > 0) {\n                setLink(links)\n            }\n\n\n        }\n\n    });\n\n\n    if (isLoading) {\n        return <div > Loaindg.. < /div>\n    } else {\n\n\n        let links = []\n\n\n        // 反向链接\n        let backLinksBox = < div className = 'markdown-body backLinks' >\n            <\n            header > Links to this page < /header> <\n            ul > 💭\n            <\n            /ul> <\n            /div>\n\n        if (card['backLinks'].length > 0) {\n            let backLinks = card['backLinks'].map((backLink) =>\n                <\n                li key = { backLink.id } >\n                <\n                Link to = {\n                    { pathname: '/post/' + backLink.id } } > { /* <span onClick={this.handleBackLinkClick.bind(Event, backLink.id)}> */ } { backLink.title } { /* </span> */ } <\n                /Link> <\n                /li>\n            )\n\n            backLinksBox = < div className = 'markdown-body backLinks' >\n                <\n                header > Links to this page < /header> <\n                ul > { backLinks } <\n                /ul> <\n                /div>\n        }\n\n\n\n        return <div >\n\n            <\n            div >\n            <\n            div ref = { post }\n        className = 'markdown-body container' >\n\n            {\n                /* <article dangerouslySetInnerHTML={{ __html: html }}></article>\n                                    {backLinksBox} */\n            }\n\n        <\n        article > < ReactMarkdown children = { card['card']['content'] }\n        rehypePlugins = {\n            [rehypeRaw] }\n        remarkPlugins = {\n            [remarkGfm, { singleTilde: false }] }\n        /></article > { backLinksBox } <\n        ul style = {\n            { display: 'none' } } > { my_link } < /ul>\n\n\n        <\n        /div> <\n        /div> <\n        /div>;\n    }\n\n}\n\nexport default Container;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}