{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\";\nimport React from 'react';\nimport Nav from '../components/Nav';\nimport '../index.css';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n      backLinks: [],\n      isLoading: true\n    };\n  }\n  componentWillMount() {\n    //console.log(this.props.location)//传递过来的所有参数\n    // console.log(this.props.location.state.key)//val值\n\n    console.log('Post componentWillMount:');\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      console.log(res);\n      //获取 URL 中的文章 ID\n      let post_id = window.location.pathname.replace('/post/', '');\n      console.log('Post componentWillMount for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == post_id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          console.log('getClearCard done');\n          console.log('backLinks:');\n          console.log(new_card['backLinks']);\n          this.setState({\n            content: heptabase_blog_data.cards[i]['content'],\n            backLinks: new_card['backLinks'],\n            isLoading: false\n          });\n          break;\n        }\n      }\n    });\n  }\n  render() {\n    console.log('Post render');\n    console.log(this.state.backLinks);\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loaidng...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else {\n      let card_text = this.state.content;\n      var showdown = require('showdown'),\n        converter = new showdown.Converter(),\n        text = card_text,\n        html = converter.makeHtml(text);\n      // console.log(html);\n\n      // 处理 html 中的卡片链接，首先确认是卡片，然后再获取卡片的标题和链接，获取不到则提示无效的卡片\n\n      // 滚动到顶部\n      window.scrollTo(0, 0);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            dangerouslySetInnerHTML: {\n              __html: html\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default Post;","map":{"version":3,"names":["React","Nav","getHeptabaseData","getClearCard","getClearImag","Post","Component","constructor","props","state","content","backLinks","isLoading","componentWillMount","console","log","heptabase_blog_data","then","res","data","post_id","window","location","pathname","replace","i","cards","length","new_card","setState","render","card_text","showdown","require","converter","Converter","text","html","makeHtml","scrollTo","__html"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["import React from 'react';\nimport Nav from '../components/Nav';\nimport '../index.css'\nimport { getHeptabaseData,getClearCard,getClearImag } from '../constantFunction'\n\nclass Post extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { content: '',backLinks:[], isLoading: true };\n    }\n\n    componentWillMount() {\n        //console.log(this.props.location)//传递过来的所有参数\n        // console.log(this.props.location.state.key)//val值\n\n        console.log('Post componentWillMount:');\n\n        let heptabase_blog_data\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            console.log(res);\n            //获取 URL 中的文章 ID\n            let post_id = window.location.pathname.replace('/post/', '')\n            console.log('Post componentWillMount for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n                \n                if (heptabase_blog_data.cards[i]['id'] == post_id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n                    console.log('getClearCard done');\n                    console.log('backLinks:');\n                    console.log(new_card['backLinks']);\n\n                    this.setState({ content: heptabase_blog_data.cards[i]['content'],backLinks:new_card['backLinks'],isLoading:false })\n                    break;\n                }\n            }\n        })\n\n\n\n    }\n\n    render() {\n\n\n        console.log('Post render');\n        console.log(this.state.backLinks);\n\n        if (this.state.isLoading) {\n            return <div>Loaidng...</div>\n        } else {\n            let card_text = this.state.content\n\n\n\n\n            var showdown = require('showdown'),\n                converter = new showdown.Converter(),\n                text = card_text,\n                html = converter.makeHtml(text);\n            // console.log(html);\n\n            // 处理 html 中的卡片链接，首先确认是卡片，然后再获取卡片的标题和链接，获取不到则提示无效的卡片\n\n            // 滚动到顶部\n            window.scrollTo(0, 0);\n\n            return (\n                <div>\n                    <Nav />\n                    <div className='container'>\n\n                        <article dangerouslySetInnerHTML={{ __html: html }}></article>\n\n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}