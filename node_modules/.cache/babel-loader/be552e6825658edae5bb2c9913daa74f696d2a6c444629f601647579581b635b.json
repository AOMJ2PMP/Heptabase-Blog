{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/page/Post.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport Nav from '../components/Nav';\nimport '../index.css';\n// import { Link } from 'react-router-dom';\n\nimport Home from './Home';\nimport Empty from './404';\nimport About from './About';\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\n\n// class Post extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = { content: '', backLinks: [], isLoading: true, new_post_id: '', old_post_id: '' };\n//     }\n\n//     UNSAFE_componentWillMount() {\n//         console.log(this.props.location)//传递过来的所有参数\n//         // console.log(this.props.location.state.key)//val值\n//         console.log(this.context);\n//         let { slug } = useParams();\n//         console.log(slug);\n\n//         console.log('Post UNSAFE_componentWillMount:');\n//         console.log(this.props);\n//         console.log(window.location);\n//         let post_id = window.location.search.replace('/post/', '')\n//         this.setContent(post_id)\n\n//         // this.props.history.listen = () => {\n//         //     console.log(this.props.history);\n//         // }\n\n//     }\n\n//     componentDidUpdate() {\n//         console.log('componentDidUpdate');\n//         console.log(this.state);\n//         if (this.state.postID != '') {\n//             // this.setContent(this.state.postID)\n//         }\n\n//     }\n\n//     componentWillReceiveProps(prevProps){\n//         console.log('componentWillReceiveProps');\n//         console.log(prevProps);\n//     }\n\n//     UNSAFE_componentWillReceiveProps(prevProps) {\n//         console.log('Post UNSAFE_componentWillReceiveProps');\n//         console.log(prevProps);\n//     }\n\n//     setContent = (id) => {\n\n//         let heptabase_blog_data\n//         getHeptabaseData.then((res) => {\n//             heptabase_blog_data = res.data\n//             console.log(res);\n//             //获取 URL 中的文章 ID\n\n//             console.log('Post setContent for:');\n//             for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n//                 if (heptabase_blog_data.cards[i]['id'] == id) {\n\n//                     // 处理内容中的图片\n//                     heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n//                     console.log('getClearImag done');\n//                     // 处理内容中的链接\n//                     let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n//                     heptabase_blog_data.cards[i] = new_card['card']\n\n//                     console.log('backLinks:');\n//                     console.log(new_card['backLinks']);\n\n//                     this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n//                     break;\n//                 }\n//             }\n\n//             // 404\n//         })\n\n//     }\n\n//     handleBackLinkClick = (id) => {\n//         console.log('handleBackLinkClick');\n//         console.log(id);\n\n//         if (id != this.state.old_post_id) {\n//             this.setState({\n//                 new_post_id: id\n//             })\n//         }\n\n//         // console.log(event);\n//     }\n\n//     render() {\n\n//         console.log('Post render');\n//         // console.log(this.state.backLinks);\n\n//         if (this.state.isLoading) {\n//             return <div>Loaidng...</div>\n//         } else {\n//             let card_text = this.state.content\n\n//             var showdown = require('showdown'),\n//                 converter = new showdown.Converter(),\n//                 text = card_text,\n//                 html = converter.makeHtml(text);\n//             // console.log(html);\n\n//             // 反向链接\n//             let backLinksBox = <div></div>\n//             if (this.state.backLinks.length > 0) {\n//                 let backLinks = this.state.backLinks.map((backLink) =>\n//                     <li key={backLink.id} >\n//                         <Link to={{ pathname: '/post/' + backLink.id }} >\n//                             {/* <span onClick={this.handleBackLinkClick.bind(Event, backLink.id)}> */}\n//                                 {backLink.title}\n//                             {/* </span> */}\n//                         </Link>\n//                     </li>\n//                 )\n\n//                 backLinksBox = <div className='backLinks'>\n//                     <header>Link to this page</header>\n//                     <ul>\n//                         {backLinks}\n//                     </ul>\n//                 </div>\n//             }\n\n//             // 滚动到顶部\n//             window.scrollTo(0, 0);\n\n//             return (\n//                 <div>\n//                     <Nav />\n//                     <div className='container'>\n\n//                         <article dangerouslySetInnerHTML={{ __html: html }}></article>\n//                         {backLinksBox}\n\n//                     </div>\n\n//                     <Routes >\n//                         <Route path=\"/post/:id/*\" element={<Post />} />\n//                         {/* <Route exact path=\"/post?id\" element={<Post />} /> */}\n//                         <Route path=\"/post/\" element={<Post />} />\n//                     </Routes>\n\n//                 </div>\n\n//             );\n//         }\n//     }\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let [card, setCard] = useState('card');\n  let {\n    slug\n  } = useParams();\n  const setContent = id => {\n    let heptabase_blog_data;\n    getHeptabaseData.then(res => {\n      heptabase_blog_data = res.data;\n      console.log(res);\n      //获取 URL 中的文章 ID\n\n      console.log('Post setContent for:');\n      for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n        if (heptabase_blog_data.cards[i]['id'] == id) {\n          // 处理内容中的图片\n          heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i]);\n          console.log('getClearImag done');\n          // 处理内容中的链接\n          let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards);\n          heptabase_blog_data.cards[i] = new_card['card'];\n          console.log('backLinks:');\n          console.log(new_card['backLinks']);\n\n          // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n          setCard(heptabase_blog_data);\n          break;\n        }\n      }\n\n      // 404\n    });\n  };\n\n  const handleBackLinkClick = id => {\n    console.log('handleBackLinkClick');\n    console.log(id);\n    if (id != this.state.old_post_id) {\n      this.setState({\n        new_post_id: id\n      });\n    }\n\n    // console.log(event);\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    //设置页面内容\n    setContent(slug);\n  });\n  console.log(slug);\n  console.log(card);\n\n  // setCard(slug)\n\n  // console.log(card);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Now showing post \", slug, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/post/d5682a77-56d4-4c65-bc22-87bfec50dbd1\",\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 12\n  }, this);\n\n  // return (\n  //     <div>Post</div>\n  // )\n}\n_s(Post, \"1pkHKYT1g/3VnfZ0gDLI6erhdlA=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","useParams","Nav","Home","Empty","About","getHeptabaseData","getClearCard","getClearImag","Post","card","setCard","slug","setContent","id","heptabase_blog_data","then","res","data","console","log","i","cards","length","new_card","handleBackLinkClick","state","old_post_id","setState","new_post_id"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js"],"sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport Nav from '../components/Nav';\nimport '../index.css'\n// import { Link } from 'react-router-dom';\n\nimport Home from './Home';\nimport Empty from './404';\nimport About from './About';\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\n\n\n// class Post extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = { content: '', backLinks: [], isLoading: true, new_post_id: '', old_post_id: '' };\n//     }\n\n\n\n//     UNSAFE_componentWillMount() {\n//         console.log(this.props.location)//传递过来的所有参数\n//         // console.log(this.props.location.state.key)//val值\n//         console.log(this.context);\n//         let { slug } = useParams();\n//         console.log(slug);\n\n\n//         console.log('Post UNSAFE_componentWillMount:');\n//         console.log(this.props);\n//         console.log(window.location);\n//         let post_id = window.location.search.replace('/post/', '')\n//         this.setContent(post_id)\n\n//         // this.props.history.listen = () => {\n//         //     console.log(this.props.history);\n//         // }\n\n//     }\n\n//     componentDidUpdate() {\n//         console.log('componentDidUpdate');\n//         console.log(this.state);\n//         if (this.state.postID != '') {\n//             // this.setContent(this.state.postID)\n//         }\n\n//     }\n\n//     componentWillReceiveProps(prevProps){\n//         console.log('componentWillReceiveProps');\n//         console.log(prevProps);\n//     }\n\n//     UNSAFE_componentWillReceiveProps(prevProps) {\n//         console.log('Post UNSAFE_componentWillReceiveProps');\n//         console.log(prevProps);\n//     }\n\n//     setContent = (id) => {\n\n//         let heptabase_blog_data\n//         getHeptabaseData.then((res) => {\n//             heptabase_blog_data = res.data\n//             console.log(res);\n//             //获取 URL 中的文章 ID\n\n//             console.log('Post setContent for:');\n//             for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n//                 if (heptabase_blog_data.cards[i]['id'] == id) {\n\n//                     // 处理内容中的图片\n//                     heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n//                     console.log('getClearImag done');\n//                     // 处理内容中的链接\n//                     let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n//                     heptabase_blog_data.cards[i] = new_card['card']\n\n//                     console.log('backLinks:');\n//                     console.log(new_card['backLinks']);\n\n//                     this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n//                     break;\n//                 }\n//             }\n\n//             // 404\n//         })\n\n//     }\n\n//     handleBackLinkClick = (id) => {\n//         console.log('handleBackLinkClick');\n//         console.log(id);\n\n//         if (id != this.state.old_post_id) {\n//             this.setState({\n//                 new_post_id: id\n//             })\n//         }\n\n//         // console.log(event);\n//     }\n\n//     render() {\n\n\n//         console.log('Post render');\n//         // console.log(this.state.backLinks);\n\n//         if (this.state.isLoading) {\n//             return <div>Loaidng...</div>\n//         } else {\n//             let card_text = this.state.content\n\n//             var showdown = require('showdown'),\n//                 converter = new showdown.Converter(),\n//                 text = card_text,\n//                 html = converter.makeHtml(text);\n//             // console.log(html);\n\n//             // 反向链接\n//             let backLinksBox = <div></div>\n//             if (this.state.backLinks.length > 0) {\n//                 let backLinks = this.state.backLinks.map((backLink) =>\n//                     <li key={backLink.id} >\n//                         <Link to={{ pathname: '/post/' + backLink.id }} >\n//                             {/* <span onClick={this.handleBackLinkClick.bind(Event, backLink.id)}> */}\n//                                 {backLink.title}\n//                             {/* </span> */}\n//                         </Link>\n//                     </li>\n//                 )\n\n//                 backLinksBox = <div className='backLinks'>\n//                     <header>Link to this page</header>\n//                     <ul>\n//                         {backLinks}\n//                     </ul>\n//                 </div>\n//             }\n\n\n//             // 滚动到顶部\n//             window.scrollTo(0, 0);\n\n//             return (\n//                 <div>\n//                     <Nav />\n//                     <div className='container'>\n\n//                         <article dangerouslySetInnerHTML={{ __html: html }}></article>\n//                         {backLinksBox}\n\n//                     </div>\n\n\n\n//                     <Routes >\n//                         <Route path=\"/post/:id/*\" element={<Post />} />\n//                         {/* <Route exact path=\"/post?id\" element={<Post />} /> */}\n//                         <Route path=\"/post/\" element={<Post />} />\n//                     </Routes>\n\n//                 </div>\n\n\n//             );\n//         }\n//     }\n\n// }\n\nfunction Post() {\n\n    let [card, setCard] = useState('card');\n    let { slug } = useParams();\n\n\n\n    const setContent = (id) => {\n\n        let heptabase_blog_data\n        getHeptabaseData.then((res) => {\n            heptabase_blog_data = res.data\n            console.log(res);\n            //获取 URL 中的文章 ID\n\n            console.log('Post setContent for:');\n            for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n                if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                    // 处理内容中的图片\n                    heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                    console.log('getClearImag done');\n                    // 处理内容中的链接\n                    let new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                    heptabase_blog_data.cards[i] = new_card['card']\n\n                    console.log('backLinks:');\n                    console.log(new_card['backLinks']);\n\n                    // this.setState({ content: heptabase_blog_data.cards[i]['content'], backLinks: new_card['backLinks'], isLoading: false, old_post_id: heptabase_blog_data.cards[i]['id'] })\n                    setCard(heptabase_blog_data)\n                    break;\n                }\n            }\n\n            // 404\n        })\n\n    }\n\n    const handleBackLinkClick = (id) => {\n        console.log('handleBackLinkClick');\n        console.log(id);\n\n        if (id != this.state.old_post_id) {\n            this.setState({\n                new_post_id: id\n            })\n        }\n\n        // console.log(event);\n    }\n\n    useEffect(() => {\n        \n        console.log('useEffect');\n\n        //设置页面内容\n        setContent(slug)\n    });\n\n    console.log(slug);\n    console.log(card);\n\n    // setCard(slug)\n\n    // console.log(card);\n\n    return <div>\n\n        Now showing post {slug}\n        <div>\n            <Link to='/post/d5682a77-56d4-4c65-bc22-87bfec50dbd1'>click me</Link>\n            <Nav />\n            <div className='container'>\n\n                {/* <article dangerouslySetInnerHTML={{ __html: html }}></article>\n                {backLinksBox} */}\n\n            </div>\n\n        </div>\n    </div>;\n\n    // return (\n    //     <div>Post</div>\n    // )\n}\n\nexport default Post;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAE1F,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAO,cAAc;AACrB;;AAEA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAE3B,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,YAAY,QAAQ,qBAAqB;;AAGlF;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AAAA;AAEA,SAASC,IAAI,GAAG;EAAA;EAEZ,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EACtC,IAAI;IAAEkB;EAAK,CAAC,GAAGX,SAAS,EAAE;EAI1B,MAAMY,UAAU,GAAIC,EAAE,IAAK;IAEvB,IAAIC,mBAAmB;IACvBT,gBAAgB,CAACU,IAAI,CAAEC,GAAG,IAAK;MAC3BF,mBAAmB,GAAGE,GAAG,CAACC,IAAI;MAC9BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB;;MAEAE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,mBAAmB,CAACO,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAEvD,IAAIN,mBAAmB,CAACO,KAAK,CAACD,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIP,EAAE,EAAE;UAE1C;UACAC,mBAAmB,CAACO,KAAK,CAACD,CAAC,CAAC,GAAGb,YAAY,CAACO,mBAAmB,CAACO,KAAK,CAACD,CAAC,CAAC,CAAC;UACzEF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAChC;UACA,IAAII,QAAQ,GAAGjB,YAAY,CAACQ,mBAAmB,CAACO,KAAK,CAACD,CAAC,CAAC,EAAEN,mBAAmB,CAACO,KAAK,CAAC;UACpFP,mBAAmB,CAACO,KAAK,CAACD,CAAC,CAAC,GAAGG,QAAQ,CAAC,MAAM,CAAC;UAE/CL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzBD,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC,WAAW,CAAC,CAAC;;UAElC;UACAb,OAAO,CAACI,mBAAmB,CAAC;UAC5B;QACJ;MACJ;;MAEA;IACJ,CAAC,CAAC;EAEN,CAAC;;EAED,MAAMU,mBAAmB,GAAIX,EAAE,IAAK;IAChCK,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCD,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;IAEf,IAAIA,EAAE,IAAI,IAAI,CAACY,KAAK,CAACC,WAAW,EAAE;MAC9B,IAAI,CAACC,QAAQ,CAAC;QACVC,WAAW,EAAEf;MACjB,CAAC,CAAC;IACN;;IAEA;EACJ,CAAC;;EAEDnB,SAAS,CAAC,MAAM;IAEZwB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;IAExB;IACAP,UAAU,CAACD,IAAI,CAAC;EACpB,CAAC,CAAC;EAEFO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjBO,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;;EAEjB;;EAEA;;EAEA,oBAAO;IAAA,gCAEeE,IAAI,eACtB;MAAA,wBACI,QAAC,IAAI;QAAC,EAAE,EAAC,4CAA4C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACrE,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eACP;QAAK,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAKpB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;;EAEN;EACA;EACA;AACJ;AAAC,GAxFQH,IAAI;EAAA,QAGMR,SAAS;AAAA;AAAA,KAHnBQ,IAAI;AA0Fb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}