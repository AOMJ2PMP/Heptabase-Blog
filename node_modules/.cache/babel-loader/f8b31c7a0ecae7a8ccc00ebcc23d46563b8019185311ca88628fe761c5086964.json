{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/heptabase_blog/src/components/BlogPost.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport localStorage from 'localStorage';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BlogPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePostClick = postID => {\n      console.log('handlePostClick');\n      console.log(this);\n      console.log(postID);\n      this.props.handlePostClick(postID);\n    };\n    this.state = {\n      posts: []\n    };\n  }\n  componentDidMount() {\n    // 获取本地数据\n    let heptabase_blog_data = localStorage.getItem(\"heptabase_blog_data\");\n    console.log('local_heptabase_blog_data:');\n    // 若本地存在数据则不重新获取\n    if (heptabase_blog_data != undefined) {\n      this.setState({\n        posts: JSON.parse(heptabase_blog_data)\n      });\n    } else {\n      // 本地无数据\n      // 获取 Heptabase 数据\n      fetch(\n      //https://app.heptabase.com/w/d4cc3728297609add1a00aab108e90c4e57a1c378cfc2307c251745bf7d2a884\n      'https://app.heptabase.com/api/whiteboard/?secret=d4cc3728297609add1a00aab108e90c4e57a1c378cfc2307c251745bf7d2a884').then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          posts: data\n        });\n\n        // 存储数据到本地缓存\n        localStorage.setItem(\"heptabase_blog_data\", JSON.stringify(data));\n        // console.log(this.state.posts);\n      }).catch(e => console.log('错误:', e));\n    }\n    console.log('BlogPost componentDidMount');\n  }\n  componentDidUpdate() {\n    console.log('BlogPost componentDidUpdate');\n\n    // console.log(this.props.posts);\n    // if (this.props.posts != this.state.posts) {\n    //     this.setState({ posts: this.props.posts })\n    // }\n  }\n\n  render() {\n    console.log(this.state.posts);\n    let posts = this.state.posts.cards;\n    let postList;\n    if (posts != undefined) {\n      console.log('posts.map');\n      console.log(posts);\n      postList = posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/post/' + post.id,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: format(new Date(post.createdTime), 'yyyy-MM-DD')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: postList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default BlogPost;","map":{"version":3,"names":["React","Link","localStorage","format","BlogPost","Component","constructor","props","handlePostClick","postID","console","log","state","posts","componentDidMount","heptabase_blog_data","getItem","undefined","setState","JSON","parse","fetch","then","res","json","data","setItem","stringify","catch","e","componentDidUpdate","render","cards","postList","map","post","id","title","Date","createdTime"],"sources":["/Users/jiangzilong/学习/minpg/heptabase_blog/src/components/BlogPost.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport localStorage from 'localStorage';\nimport { format } from 'date-fns'\n\n\nclass BlogPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { posts: [] };\n    }\n\n    componentDidMount() {\n\n        // 获取本地数据\n        let heptabase_blog_data = localStorage.getItem(\"heptabase_blog_data\")\n        console.log('local_heptabase_blog_data:');\n        // 若本地存在数据则不重新获取\n        if (heptabase_blog_data != undefined) {\n            this.setState({ posts: JSON.parse(heptabase_blog_data) })\n        } else {\n            // 本地无数据\n            // 获取 Heptabase 数据\n            fetch(\n                //https://app.heptabase.com/w/d4cc3728297609add1a00aab108e90c4e57a1c378cfc2307c251745bf7d2a884\n                'https://app.heptabase.com/api/whiteboard/?secret=d4cc3728297609add1a00aab108e90c4e57a1c378cfc2307c251745bf7d2a884'\n            )\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data)\n                    this.setState({ posts: data })\n                    \n                    // 存储数据到本地缓存\n                    localStorage.setItem(\"heptabase_blog_data\", JSON.stringify(data))\n                    // console.log(this.state.posts);\n                })\n                .catch(e => console.log('错误:', e))\n        }\n\n        \n        \n\n\n        console.log('BlogPost componentDidMount');\n\n\n\n    }\n\n    componentDidUpdate() {\n        console.log('BlogPost componentDidUpdate');\n\n        // console.log(this.props.posts);\n        // if (this.props.posts != this.state.posts) {\n        //     this.setState({ posts: this.props.posts })\n        // }\n\n    }\n\n    handlePostClick = (postID) => {\n\n\n        console.log('handlePostClick');\n        console.log(this);\n        console.log(postID);\n        this.props.handlePostClick(postID)\n    }\n\n    render() {\n\n        console.log(this.state.posts);\n        let posts = this.state.posts.cards\n\n        let postList\n        if (posts != undefined) {\n\n\n            console.log('posts.map');\n            console.log(posts);\n\n            postList = posts.map((post) =>\n                <li key={post.id} >\n                    <Link to={'/post/'+post.id} >\n                        <h2>{post.title}</h2>\n                    </Link>\n                    <p>{format(new Date(post.createdTime), 'yyyy-MM-DD')}</p>\n\n                </li>\n            )\n        }\n\n\n        return (\n            <div className='post_list'>\n                <ul>{postList}</ul>\n            </div>\n        );\n    }\n}\n\nexport default BlogPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}