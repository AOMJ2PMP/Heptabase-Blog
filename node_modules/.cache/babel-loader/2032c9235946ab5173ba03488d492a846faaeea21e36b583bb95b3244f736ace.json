{"ast":null,"code":"var _jsxFileName = \"/Users/jiangzilong/\\u5B66\\u4E60/minpg/Heptabase-Blog/src/components/Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\nimport { format } from 'date-fns';\nimport '../index.css';\nimport 'github-markdown-css';\nimport Loading from '../components/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport rehypeRaw from 'rehype-raw';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n// import docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction';\nimport e from 'cors';\n\n// 文章正文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container(props) {\n  _s();\n  // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n  let post = useRef(null);\n\n  // 当前路径信息\n  let path = window.location.pathname;\n\n  // 路径中包含的 post id，用以获取文章 md 信息\n  let path_id;\n  if (path.indexOf('/post/') < 0) {\n    // 若路径中不含 post id，则取父组件的 props\n    path_id = props.post_id;\n  } else {\n    path_id = path.replace('/post/', '');\n  }\n\n  // 记录当前文章的 ID\n  let [thisPageId, setPageID] = useState('');\n\n  // 记录自定义的 Link 数据，用来实现 DOM 链接的间接跳转\n  let [my_link, setLink] = useState('');\n\n  // 如果当前页面 ID 为空则获取数据\n  if (thisPageId == '') {\n    setPageID(props.post_id);\n  }\n\n  // 如果是移动端则增加图片的尺寸\n  let isMobile = navigator.userAgent.match(/Mobile/i);\n  let mobileSkale = 1;\n  if (isMobile) {\n    mobileSkale = 2;\n  }\n  const handleBackLinkClick = (link_id, current_id) => {\n    console.log('handleBackLinkClick');\n    console.log(link_id);\n    // 记录跳转类型\n    sessionStorage.setItem('nav_type', 0);\n    // 记录当前滚动的位置\n    sessionStorage.setItem('scrollY', window.scrollY);\n    props.handleLinkClick(link_id, current_id);\n  };\n  const {\n    pathname\n  } = useLocation();\n  // 组件生命周期，组件载入、更新时将触发此函数\n  useEffect(() => {\n    console.log('useEffect');\n    props.handleHashChange(window.location.href);\n\n    //设置页面内容\n    // if (card === 'card') {\n    //     // 如果 card 无内容，则获取数据\n\n    //     setContent(path_id)\n\n    //     // window.scrollTo(0, 0);\n    // } else {\n\n    //     if (card['card']['id'] !== path_id) {\n\n    //         // 如果 card 的 ID 与当前 URL 中的 ID 不一致\n    //         console.log('useEffect setContent');\n    //         // 获取新 URL 中的文章 ID 对应的 md 数据\n    //         setContent(path_id)\n    //         // 清空旧页面的自定义链接\n    //         setLink('')\n\n    //     }\n    // }\n\n    // window.scrollTo(0, 0);\n\n    // dom 加载完毕后\n    if (post.current != null && props['card']['card']['id'] == path_id) {\n      // 设置网易云音乐播放器的尺寸\n      console.log(document.getElementById('player'));\n      console.log(document.getElementById('music'));\n      // console.log(document.getElementById('music').contentWindow.getElementById('infolayer'));\n\n      // 设置 img 的尺寸\n      let article_img = document.getElementsByTagName('img');\n      console.log(article_img);\n      for (let i = 0; i < article_img.length; i++) {\n        let width_key_index = article_img[i]['alt'].indexOf('{{width ');\n        if (width_key_index > -1) {\n          let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length);\n          img_width = img_width.replace('{{width ', '');\n          img_width = img_width.replace('}}', '');\n          article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%');\n          article_img[i].style.display = 'block';\n          article_img[i].style.margin = '0 auto';\n        }\n      }\n\n      // 设置 a 链接的点击事件，将 a 按照 Link 的方式进行跳转，避免页面不必要的刷新\n      let article_link = document.getElementsByTagName('span');\n      console.log(article_link);\n      let links = [];\n      for (let i = 0; i < article_link.length; i++) {\n        if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n          // 如果 DOM 中的元素**不**包含 path 属性，则跳过（有 path 属性的元素才需要处理）\n          continue;\n        }\n\n        // 创建 Link 元素，当点击上述 span 原生时，将触发 Link 元素的点击事件\n        let link_temp = /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link_temp\",\n          to: article_link[i].getAttribute('path'),\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this);\n        links.push(link_temp);\n\n        // DOM 中的特定元素点击时\n        article_link[i].onclick = () => {\n          console.log('a click');\n\n          // 获取元素的 path 参数，提取 post id\n          let post_id = article_link[i].getAttribute('path').replace('/post/', '');\n          console.log(post_id);\n          props.handleLinkClick(post_id, props['card']['card']['id']);\n\n          // 获取自定义的 Link 元素\n          // let my_links = document.getElementsByClassName('link_temp')\n\n          // for (let j = 0; j < my_links.length; j++) {\n          //     console.log(my_links[j]);\n          //     console.log(my_links[j].href);\n\n          //     // 如果自定义的 Link 的 href 属性中包含 元素 path 属性的值，则可匹配\n          //     if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n\n          //         // 记录跳转类型\n          //         sessionStorage.setItem('nav_type', 1)\n          //         // 记录当前滚动的位置\n          //         sessionStorage.setItem('scrollY', window.scrollY)\n\n          //         // 点击\n          //         my_links[j].click()\n          //         // 页面滚动到顶部\n          //         // console.log('scrollTo(0, 0)');\n          //         // window.scrollTo(0, 0);\n\n          //         break\n          //     }\n          // }\n        };\n      }\n\n      // 设置自定义 Link 并渲染到 DOM 中\n      if (my_link == '' && links.length > 0) {\n        setLink(links);\n      }\n    }\n  });\n\n  // 加载中\n  if (false) {\n    console.log('isLoading');\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 16\n    }, this);\n  } else {\n    let links = [];\n\n    // 反向链接\n    let backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-body backLinks\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"\\uD83D\\uDD17LINKS TO THIS PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"\\uD83D\\uDC7B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 28\n    }, this);\n    if (props['card']['backLinks'].length > 0) {\n      let backLinks = props['card']['backLinks'].map(backLink => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"my_link\",\n          onClick: handleBackLinkClick.bind(this, backLink.id, props['card']['card']['id']),\n          children: backLink.title\n        }, backLink.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, backLink.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this));\n      backLinksBox = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-body backLinks\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"\\uD83D\\uDD17LINKS TO THIS PAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: backLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 28\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: post,\n      className: \"markdown-body container\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: props['card']['card']['content'],\n          components: {\n            code(_ref) {\n              let {\n                node,\n                inline,\n                className,\n                children,\n                ...props\n              } = _ref;\n              const match = /language-(\\w+)/.exec(className || '');\n              return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                children: String(children).replace(/\\n$/, ''),\n                style: atomDark,\n                language: match[1],\n                PreTag: \"div\",\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                className: className,\n                ...props,\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this);\n            }\n          },\n          rehypePlugins: [rehypeRaw],\n          remarkPlugins: [remarkGfm, {\n            singleTilde: false\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"time\", {\n          children: [\"Created \", format(new Date(props['card']['card']['createdTime']), 'yyyy-MM-dd')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n          children: props['card']['card']['lastEditedTimeDiff']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), backLinksBox, /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          display: 'none'\n        },\n        children: my_link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(Container, \"rFGqGtJkfKIEsEPXK1V0+YBths4=\", false, function () {\n  return [useLocation];\n});\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useUrlState","BrowserRouter","Router","Routes","Route","Link","useParams","useLocation","format","Loading","ReactMarkdown","remarkGfm","rehypeRaw","Prism","SyntaxHighlighter","atomDark","getHeptabaseData","getClearCard","getClearImag","e","Container","props","post","path","window","location","pathname","path_id","indexOf","post_id","replace","thisPageId","setPageID","my_link","setLink","isMobile","navigator","userAgent","match","mobileSkale","handleBackLinkClick","link_id","current_id","console","log","sessionStorage","setItem","scrollY","handleLinkClick","handleHashChange","href","current","document","getElementById","article_img","getElementsByTagName","i","length","width_key_index","img_width","substring","setAttribute","Number","toString","style","display","margin","article_link","links","getAttribute","undefined","link_temp","push","onclick","backLinksBox","backLinks","map","backLink","bind","id","title","code","node","inline","className","children","exec","String","singleTilde","Date"],"sources":["/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Container.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\n\nimport { format } from 'date-fns'\n\nimport '../index.css'\nimport 'github-markdown-css'\nimport Loading from '../components/Loading'\n\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport rehypeRaw from 'rehype-raw'\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\n// import docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n\n\n\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\nimport e from 'cors';\n\n\n// 文章正文\nfunction Container(props) {\n\n    // 记录文章的 DOM 信息，用来处理 DOM 元素，例如修改图片样式\n    let post = useRef(null);\n\n    // 当前路径信息\n    let path = window.location.pathname\n\n    // 路径中包含的 post id，用以获取文章 md 信息\n    let path_id\n    if (path.indexOf('/post/') < 0) {\n\n        // 若路径中不含 post id，则取父组件的 props\n        path_id = props.post_id\n\n    } else {\n        path_id = path.replace('/post/', '')\n    }\n\n\n\n\n    // 记录当前文章的 ID\n    let [thisPageId, setPageID] = useState('')\n\n    // 记录自定义的 Link 数据，用来实现 DOM 链接的间接跳转\n    let [my_link, setLink] = useState('');\n\n\n\n    // 如果当前页面 ID 为空则获取数据\n    if (thisPageId == '') {\n        setPageID(props.post_id)\n    }\n\n    // 如果是移动端则增加图片的尺寸\n    let isMobile = navigator.userAgent.match(/Mobile/i)\n    let mobileSkale = 1\n    if (isMobile) {\n        mobileSkale = 2\n    }\n\n    const handleBackLinkClick = (link_id,current_id) => {\n        console.log('handleBackLinkClick');\n        console.log(link_id);\n        // 记录跳转类型\n        sessionStorage.setItem('nav_type', 0)\n        // 记录当前滚动的位置\n        sessionStorage.setItem('scrollY', window.scrollY)\n\n        props.handleLinkClick(link_id,current_id)\n\n    }\n\n    const { pathname } = useLocation();\n    // 组件生命周期，组件载入、更新时将触发此函数\n    useEffect(() => {\n\n        console.log('useEffect');\n        props.handleHashChange(window.location.href)\n\n        //设置页面内容\n        // if (card === 'card') {\n        //     // 如果 card 无内容，则获取数据\n\n        //     setContent(path_id)\n\n        //     // window.scrollTo(0, 0);\n        // } else {\n\n\n        //     if (card['card']['id'] !== path_id) {\n\n        //         // 如果 card 的 ID 与当前 URL 中的 ID 不一致\n        //         console.log('useEffect setContent');\n        //         // 获取新 URL 中的文章 ID 对应的 md 数据\n        //         setContent(path_id)\n        //         // 清空旧页面的自定义链接\n        //         setLink('')\n\n        //     }\n        // }\n\n        // window.scrollTo(0, 0);\n\n        // dom 加载完毕后\n        if (post.current != null && props['card']['card']['id'] == path_id) {\n\n            // 设置网易云音乐播放器的尺寸\n            console.log(document.getElementById('player'));\n            console.log(document.getElementById('music'));\n            // console.log(document.getElementById('music').contentWindow.getElementById('infolayer'));\n\n            // 设置 img 的尺寸\n            let article_img = document.getElementsByTagName('img');\n            console.log(article_img);\n\n            for (let i = 0; i < article_img.length; i++) {\n                let width_key_index = article_img[i]['alt'].indexOf('{{width ')\n                if (width_key_index > -1) {\n                    let img_width = article_img[i]['alt'].substring(width_key_index, article_img[i]['alt'].length)\n                    img_width = img_width.replace('{{width ', '')\n                    img_width = img_width.replace('}}', '')\n\n                    article_img[i].setAttribute('style', 'width:' + (Number(img_width.replace('%', '')) * mobileSkale).toString() + '%')\n                    article_img[i].style.display = 'block'\n                    article_img[i].style.margin = '0 auto'\n                }\n            }\n\n            // 设置 a 链接的点击事件，将 a 按照 Link 的方式进行跳转，避免页面不必要的刷新\n            let article_link = document.getElementsByTagName('span');\n            console.log(article_link);\n            let links = []\n\n            for (let i = 0; i < article_link.length; i++) {\n\n\n                if (article_link[i].getAttribute('path') == undefined || article_link[i].getAttribute('path') == null) {\n                    // 如果 DOM 中的元素**不**包含 path 属性，则跳过（有 path 属性的元素才需要处理）\n                    continue\n                }\n\n                // 创建 Link 元素，当点击上述 span 原生时，将触发 Link 元素的点击事件\n                let link_temp = <Link className='link_temp' to={article_link[i].getAttribute('path')}>Link</Link>\n                links.push(link_temp)\n\n\n                // DOM 中的特定元素点击时\n                article_link[i].onclick = () => {\n                    console.log('a click');\n\n                    // 获取元素的 path 参数，提取 post id\n                    let post_id = article_link[i].getAttribute('path').replace('/post/', '')\n                    console.log(post_id);\n\n                    props.handleLinkClick(post_id,props['card']['card']['id'])\n\n                    // 获取自定义的 Link 元素\n                    // let my_links = document.getElementsByClassName('link_temp')\n\n                    // for (let j = 0; j < my_links.length; j++) {\n                    //     console.log(my_links[j]);\n                    //     console.log(my_links[j].href);\n\n                    //     // 如果自定义的 Link 的 href 属性中包含 元素 path 属性的值，则可匹配\n                    //     if (my_links[j].href.indexOf(article_link[i].getAttribute('path')) >= 0) {\n\n                    //         // 记录跳转类型\n                    //         sessionStorage.setItem('nav_type', 1)\n                    //         // 记录当前滚动的位置\n                    //         sessionStorage.setItem('scrollY', window.scrollY)\n\n                    //         // 点击\n                    //         my_links[j].click()\n                    //         // 页面滚动到顶部\n                    //         // console.log('scrollTo(0, 0)');\n                    //         // window.scrollTo(0, 0);\n\n                    //         break\n                    //     }\n                    // }\n\n                }\n            }\n\n            // 设置自定义 Link 并渲染到 DOM 中\n            if (my_link == '' && links.length > 0) {\n                setLink(links)\n            }\n\n        }\n\n\n    });\n\n    // 加载中\n    if (false) {\n        console.log('isLoading');\n\n        return <Loading />\n\n\n    } else {\n\n        let links = []\n\n        // 反向链接\n        let backLinksBox = <div className='markdown-body backLinks'>\n            <header>🔗LINKS TO THIS PAGE</header>\n            <ul>\n                👻\n            </ul>\n        </div>\n\n        if (props['card']['backLinks'].length > 0) {\n            let backLinks = props['card']['backLinks'].map((backLink) =>\n                <li key={backLink.id} >\n\n                    {/* <Link key={backLink.id} to={{ pathname: '/post/' + backLink.id }} > */}\n                    <span className='my_link' key={backLink.id} onClick={handleBackLinkClick.bind(this,backLink.id,props['card']['card']['id'])}>\n                        {backLink.title}\n                    </span>\n                    {/* </Link> */}\n\n                </li>\n            )\n\n            backLinksBox = <div className='markdown-body backLinks'>\n                <header>🔗LINKS TO THIS PAGE</header>\n                <ul>\n                    {backLinks}\n                </ul>\n            </div>\n        }\n\n\n\n        return <div ref={post} className='markdown-body container'>\n\n            <article>\n\n                <ReactMarkdown children={props['card']['card']['content']}\n                    components={{\n                        code({ node, inline, className, children, ...props }) {\n                            const match = /language-(\\w+)/.exec(className || '')\n                            return !inline && match ? (\n                                <SyntaxHighlighter\n                                    children={String(children).replace(/\\n$/, '')}\n                                    style={atomDark}\n                                    language={match[1]}\n                                    PreTag=\"div\"\n                                    {...props}\n                                />\n                            ) : (\n                                <code className={className} {...props}>\n                                    {children}\n                                </code>\n                            )\n                        }\n                    }}\n                    rehypePlugins={[rehypeRaw]}\n                    remarkPlugins={[remarkGfm, { singleTilde: false }]} /></article>\n            <div className='postTime'>\n                <time>Created {format(new Date(props['card']['card']['createdTime']), 'yyyy-MM-dd')}</time>\n                <time>{props['card']['card']['lastEditedTimeDiff']}</time>\n            </div>\n            {/* /反向链接 */}\n            {backLinksBox}\n            <ul style={{ display: 'none' }}>{my_link}</ul>\n\n\n        </div>\n    }\n\n}\n\nexport default Container;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAC1F,SAASC,WAAW,QAAQ,cAAc;AAE1C,SAASC,MAAM,QAAQ,UAAU;AAEjC,OAAO,cAAc;AACrB,OAAO,qBAAqB;AAC5B,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,QAAQ,QAAQ,gDAAgD;AACzE;;AAKA,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,YAAY,QAAQ,qBAAqB;AAClF,OAAOC,CAAC,MAAM,MAAM;;AAGpB;AAAA;AACA,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EAEtB;EACA,IAAIC,IAAI,GAAGvB,MAAM,CAAC,IAAI,CAAC;;EAEvB;EACA,IAAIwB,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;;EAEnC;EACA,IAAIC,OAAO;EACX,IAAIJ,IAAI,CAACK,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAE5B;IACAD,OAAO,GAAGN,KAAK,CAACQ,OAAO;EAE3B,CAAC,MAAM;IACHF,OAAO,GAAGJ,IAAI,CAACO,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EACxC;;EAKA;EACA,IAAI,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,IAAI,CAACoC,OAAO,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;;EAIrC;EACA,IAAIkC,UAAU,IAAI,EAAE,EAAE;IAClBC,SAAS,CAACX,KAAK,CAACQ,OAAO,CAAC;EAC5B;;EAEA;EACA,IAAIM,QAAQ,GAAGC,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,SAAS,CAAC;EACnD,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIJ,QAAQ,EAAE;IACVI,WAAW,GAAG,CAAC;EACnB;EAEA,MAAMC,mBAAmB,GAAG,CAACC,OAAO,EAACC,UAAU,KAAK;IAChDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCD,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpB;IACAI,cAAc,CAACC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;IACrC;IACAD,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEtB,MAAM,CAACuB,OAAO,CAAC;IAEjD1B,KAAK,CAAC2B,eAAe,CAACP,OAAO,EAACC,UAAU,CAAC;EAE7C,CAAC;EAED,MAAM;IAAEhB;EAAS,CAAC,GAAGnB,WAAW,EAAE;EAClC;EACAT,SAAS,CAAC,MAAM;IAEZ6C,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBvB,KAAK,CAAC4B,gBAAgB,CAACzB,MAAM,CAACC,QAAQ,CAACyB,IAAI,CAAC;;IAE5C;IACA;IACA;;IAEA;;IAEA;IACA;;IAGA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;;IAEA;IACA,IAAI5B,IAAI,CAAC6B,OAAO,IAAI,IAAI,IAAI9B,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIM,OAAO,EAAE;MAEhE;MACAgB,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAAC;MAC9CV,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;MAC7C;;MAEA;MACA,IAAIC,WAAW,GAAGF,QAAQ,CAACG,oBAAoB,CAAC,KAAK,CAAC;MACtDZ,OAAO,CAACC,GAAG,CAACU,WAAW,CAAC;MAExB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,IAAIE,eAAe,GAAGJ,WAAW,CAACE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC5B,OAAO,CAAC,UAAU,CAAC;QAC/D,IAAI8B,eAAe,GAAG,CAAC,CAAC,EAAE;UACtB,IAAIC,SAAS,GAAGL,WAAW,CAACE,CAAC,CAAC,CAAC,KAAK,CAAC,CAACI,SAAS,CAACF,eAAe,EAAEJ,WAAW,CAACE,CAAC,CAAC,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC;UAC9FE,SAAS,GAAGA,SAAS,CAAC7B,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UAC7C6B,SAAS,GAAGA,SAAS,CAAC7B,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;UAEvCwB,WAAW,CAACE,CAAC,CAAC,CAACK,YAAY,CAAC,OAAO,EAAE,QAAQ,GAAG,CAACC,MAAM,CAACH,SAAS,CAAC7B,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAGS,WAAW,EAAEwB,QAAQ,EAAE,GAAG,GAAG,CAAC;UACpHT,WAAW,CAACE,CAAC,CAAC,CAACQ,KAAK,CAACC,OAAO,GAAG,OAAO;UACtCX,WAAW,CAACE,CAAC,CAAC,CAACQ,KAAK,CAACE,MAAM,GAAG,QAAQ;QAC1C;MACJ;;MAEA;MACA,IAAIC,YAAY,GAAGf,QAAQ,CAACG,oBAAoB,CAAC,MAAM,CAAC;MACxDZ,OAAO,CAACC,GAAG,CAACuB,YAAY,CAAC;MACzB,IAAIC,KAAK,GAAG,EAAE;MAEd,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,YAAY,CAACV,MAAM,EAAED,CAAC,EAAE,EAAE;QAG1C,IAAIW,YAAY,CAACX,CAAC,CAAC,CAACa,YAAY,CAAC,MAAM,CAAC,IAAIC,SAAS,IAAIH,YAAY,CAACX,CAAC,CAAC,CAACa,YAAY,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE;UACnG;UACA;QACJ;;QAEA;QACA,IAAIE,SAAS,gBAAG,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAEJ,YAAY,CAACX,CAAC,CAAC,CAACa,YAAY,CAAC,MAAM,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY;QACjGD,KAAK,CAACI,IAAI,CAACD,SAAS,CAAC;;QAGrB;QACAJ,YAAY,CAACX,CAAC,CAAC,CAACiB,OAAO,GAAG,MAAM;UAC5B9B,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;UAEtB;UACA,IAAIf,OAAO,GAAGsC,YAAY,CAACX,CAAC,CAAC,CAACa,YAAY,CAAC,MAAM,CAAC,CAACvC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;UACxEa,OAAO,CAACC,GAAG,CAACf,OAAO,CAAC;UAEpBR,KAAK,CAAC2B,eAAe,CAACnB,OAAO,EAACR,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;;UAE1D;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;QAEJ,CAAC;MACL;;MAEA;MACA,IAAIY,OAAO,IAAI,EAAE,IAAImC,KAAK,CAACX,MAAM,GAAG,CAAC,EAAE;QACnCvB,OAAO,CAACkC,KAAK,CAAC;MAClB;IAEJ;EAGJ,CAAC,CAAC;;EAEF;EACA,IAAI,KAAK,EAAE;IACPzB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAExB,oBAAO,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAGtB,CAAC,MAAM;IAEH,IAAIwB,KAAK,GAAG,EAAE;;IAEd;IACA,IAAIM,YAAY,gBAAG;MAAK,SAAS,EAAC,yBAAyB;MAAA,wBACvD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqC,eACrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEK;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;IAEN,IAAIrD,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAACoC,MAAM,GAAG,CAAC,EAAE;MACvC,IAAIkB,SAAS,GAAGtD,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAACuD,GAAG,CAAEC,QAAQ,iBACpD;QAAA,uBAGI;UAAM,SAAS,EAAC,SAAS;UAAmB,OAAO,EAAErC,mBAAmB,CAACsC,IAAI,CAAC,IAAI,EAACD,QAAQ,CAACE,EAAE,EAAC1D,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAE;UAAA,UACvHwD,QAAQ,CAACG;QAAK,GADYH,QAAQ,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA;MAEnC,GALFF,QAAQ,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAQf,CACR;MAEDL,YAAY,gBAAG;QAAK,SAAS,EAAC,yBAAyB;QAAA,wBACnD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqC,eACrC;UAAA,UACKC;QAAS;UAAA;UAAA;UAAA;QAAA,QACT;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IACV;IAIA,oBAAO;MAAK,GAAG,EAAErD,IAAK;MAAC,SAAS,EAAC,yBAAyB;MAAA,wBAEtD;QAAA,uBAEI,QAAC,aAAa;UAAC,QAAQ,EAAED,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAE;UACtD,UAAU,EAAE;YACR4D,IAAI,OAAkD;cAAA,IAAjD;gBAAEC,IAAI;gBAAEC,MAAM;gBAAEC,SAAS;gBAAEC,QAAQ;gBAAE,GAAGhE;cAAM,CAAC;cAChD,MAAMiB,KAAK,GAAG,gBAAgB,CAACgD,IAAI,CAACF,SAAS,IAAI,EAAE,CAAC;cACpD,OAAO,CAACD,MAAM,IAAI7C,KAAK,gBACnB,QAAC,iBAAiB;gBACd,QAAQ,EAAEiD,MAAM,CAACF,QAAQ,CAAC,CAACvD,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE;gBAC9C,KAAK,EAAEf,QAAS;gBAChB,QAAQ,EAAEuB,KAAK,CAAC,CAAC,CAAE;gBACnB,MAAM,EAAC,KAAK;gBAAA,GACRjB;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QACX,gBAEF;gBAAM,SAAS,EAAE+D,SAAU;gBAAA,GAAK/D,KAAK;gBAAA,UAChCgE;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAEhB;YACL;UACJ,CAAE;UACF,aAAa,EAAE,CAACzE,SAAS,CAAE;UAC3B,aAAa,EAAE,CAACD,SAAS,EAAE;YAAE6E,WAAW,EAAE;UAAM,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAU,eACxE;QAAK,SAAS,EAAC,UAAU;QAAA,wBACrB;UAAA,uBAAehF,MAAM,CAAC,IAAIiF,IAAI,CAACpE,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,YAAY,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3F;UAAA,UAAOA,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,oBAAoB;QAAC;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACxD,EAELqD,YAAY,eACb;QAAI,KAAK,EAAE;UAAET,OAAO,EAAE;QAAO,CAAE;QAAA,UAAEhC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAG5C;EACV;AAEJ;AAAC,GA/PQb,SAAS;EAAA,QAsDOb,WAAW;AAAA;AAAA,KAtD3Ba,SAAS;AAiQlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}