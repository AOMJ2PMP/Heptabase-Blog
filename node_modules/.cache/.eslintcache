[{"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/index.js":"1","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/App.js":"2","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/About.js":"3","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js":"4","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/404.js":"5","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Nav.js":"6","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/BlogPost.js":"7","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Container.js":"8","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/PostList.js":"9","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/constantFunction.js":"10","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/config.js":"11","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Loading.js":"12","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/footer.js":"13","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Footer.js":"14","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/hooks/useHash/index.js":"15"},{"size":353,"mtime":1668421280690,"results":"16","hashOfConfig":"17"},{"size":1001,"mtime":1669975418841,"results":"18","hashOfConfig":"17"},{"size":1819,"mtime":1669973585679,"results":"19","hashOfConfig":"17"},{"size":13125,"mtime":1670066404512,"results":"20","hashOfConfig":"17"},{"size":425,"mtime":1669340645758,"results":"21","hashOfConfig":"17"},{"size":827,"mtime":1668344346015,"results":"22","hashOfConfig":"17"},{"size":2168,"mtime":1669976937097,"results":"23","hashOfConfig":"17"},{"size":9283,"mtime":1670057150271,"results":"24","hashOfConfig":"17"},{"size":586,"mtime":1668702818227,"results":"25","hashOfConfig":"17"},{"size":14730,"mtime":1670054785626,"results":"26","hashOfConfig":"17"},{"size":162,"mtime":1668344481968,"results":"27","hashOfConfig":"17"},{"size":392,"mtime":1668424689924,"results":"28","hashOfConfig":"17"},{"size":344,"mtime":1668703512156,"results":"29","hashOfConfig":"17"},{"size":344,"mtime":1668703512156,"results":"30","hashOfConfig":"17"},{"size":1029,"mtime":1668765098244,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"1ioiadz",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"36"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/index.js",["83"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createRoot } from 'react-dom/client';\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\n\nroot.render(<App />)\n\n// ReactDOM.render(<App />, document.getElementById('root'));",[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/App.js",["84"],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/About.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/Post.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams, useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\n\nimport Container from '../components/Container'\nimport Nav from '../components/Nav';\nimport Footer from '../components/Footer'\nimport Loading from '../components/Loading'\n\nimport '../index.css'\nimport 'github-markdown-css'\n\nimport { getHeptabaseData, getClearCard, getClearImag } from '../constantFunction'\nimport { id } from 'date-fns/locale';\n\nimport useHash from \"../hooks/useHash\";\n\n\n\nlet windowWidth = window.innerWidth\nlet minWidth = 600\n\n// 文章页面\nclass Post extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            card: null //所有的 hepta 数据\n            , main_card: null //首页卡片\n            , cardList: [] // 当前页面的卡片列表\n            , location: '' // 记录 URL\n            , activeNote: 'null'\n        };\n    }\n\n    componentDidMount() {\n\n        // 请求 hepta 数据 getHeptabaseData\n        getHeptabaseData.then((res) => {\n\n            let heptabase_blog_data = res.data\n\n            // 将数据保存到 state 中\n            this.setState({\n                card: heptabase_blog_data,\n                main_card: res['pages']['about']\n            }, () => {\n\n                // 渲染 URL、数据\n                this.herfToData()\n            })\n\n        })\n\n    }\n\n    // 根据 card id 获取 card content\n    findContent = (id, heptabase_blog_data) => {\n        if (heptabase_blog_data === '') {\n            return\n        }\n\n        let new_card = null\n        console.log('Post findContent for:');\n        for (let i = 0; i < heptabase_blog_data.cards.length; i++) {\n\n            if (heptabase_blog_data.cards[i]['id'] == id) {\n\n                // 处理内容中的图片\n                heptabase_blog_data.cards[i] = getClearImag(heptabase_blog_data.cards[i])\n                console.log('getClearImag done');\n                // 处理内容中的链接\n                new_card = getClearCard(heptabase_blog_data.cards[i], heptabase_blog_data.cards)\n                heptabase_blog_data.cards[i] = new_card['card']\n\n                return new_card\n\n            }\n        }\n\n        return new_card\n\n    }\n\n    // 文章内链接、反向链接点击\n    handleLinkClick = (link_id, current_id) => {\n\n        // 设置当前活跃的笔记（用户焦点）\n        this.setState({\n            activeNote: link_id\n        })\n\n        // 已经显示此卡片则不更新 URL 和数据\n        let bingo = false\n        this.state.cardList.forEach(item => {\n\n            if (link_id == item['card']['id']) {\n\n                bingo = true\n\n            }\n\n        });\n\n        if (bingo) {\n\n            return\n        }\n\n        // 删除 Link 所在 card 后的所有 URL 参数\n        let url_search = window.location.search\n        url_search = url_search.replace('?', '')\n        url_search = url_search.replace(/&/gi, '')\n        let url_search_list = url_search.split('note-id=')\n\n        let new_url_search = ''\n        let current_page_index = -1\n        for (let i = 0; i < url_search_list.length; i++) {\n\n            if (url_search_list[i] === '') {\n                continue\n            }\n\n            if (url_search_list[i] === current_id) {\n                // URL 参数 === current_id\n                current_page_index = i\n            } else {\n                // URL 参数 !== current_id\n            }\n\n            if (new_url_search == '') {\n                new_url_search += '?note-id=' + url_search_list[i]\n            } else {\n                new_url_search += '&note-id=' + url_search_list[i]\n            }\n\n            //如果当前 id === current_id，则忽略后面的所有 ID\n            if (current_page_index > -1) {\n                break;\n            }\n        }\n\n        if (new_url_search == '') {\n            new_url_search += '?note-id=' + link_id\n        } else {\n            new_url_search += '&note-id=' + link_id\n        }\n\n        // 设置 URL\n        window.history.pushState({}, '', window.location.origin + '/post' + new_url_search)\n        // 记录 URL\n        this.setState({\n            location: window.location.href\n        })\n\n\n        // 删除 URL 中不存在的 Card\n        this.resetCardList()\n        // 根据 URL 获取 card 数据\n        this.herfToData()\n\n    }\n\n    herfToData = () => {\n\n        // 首页的情况\n        if (window.location.search === '') {\n\n            // 找到首页卡片的 ID\n            let main_id = this.state.main_card['id']\n            // 设置 URL\n            window.location.replace(window.location.origin + '/post?note-id=' + main_id)\n\n        }\n\n        // 从 URL 中获取 note id，根据 id 获取卡片数据\n        let card_list = []\n        let url_search = window.location.search\n        url_search = url_search.replace('?', '')\n        url_search = url_search.replace(/&/gi, '')\n        let url_search_list = url_search.split('note-id=')\n\n        for (let i = 0; i < url_search_list.length; i++) {\n            if (url_search_list[i] == '') {\n                continue\n            }\n            // 将数据保存到 card list 中\n            card_list.push(this.findContent(url_search_list[i], this.state.card))\n\n        }\n\n        // 收集 card 数据后一次性 setState（在 for 内分多次 setState 的话容易丢失数据）\n        this.setState({\n            cardList: card_list,\n            activeNote: card_list[card_list.length - 1]['card']['id'] // 设置当前活跃的笔记（用户焦点）\n        })\n\n\n    }\n\n    // 当 URL 变化时（子组件 container 载入完毕后也会调用此方法）\n    handleHashChange = (url) => {\n\n        // 定位到当前用户关注的笔记\n        setTimeout(() => {\n            let note_list = document.getElementsByClassName('container')\n            let foucus_note = this.state.activeNote\n\n            let target_note_offsetLeft = 0\n            for (let j = 0; j < note_list.length; j++) {\n                let note = note_list[j]\n                if (note.getAttribute('note_id') === foucus_note) {\n\n                    if (windowWidth > minWidth) {\n                        document.getElementsByClassName('notes')[0].scrollTo({ left: target_note_offsetLeft, behavior: 'smooth' })\n                    } else {\n\n                    }\n\n                    break;\n\n                }\n\n                target_note_offsetLeft += note.clientWidth\n            }\n        }, 100);\n\n        // 如果 url 发生变化，则更新数据\n        if (url !== this.state.location) {\n\n\n            // 将当前 URL 保存到 state 中\n            this.setState({\n                location: url\n            })\n\n            if (this.state.location !== '') {\n\n                // cardList 中不存在 URL 的某一个 card\n                // 加载此 card 的数据\n                this.herfToData()\n\n            }\n\n        }\n\n        // 删除 URL 中不存在的 Card\n        this.resetCardList()\n\n    }\n\n    // 删除 URL 中不存在的 Card\n    resetCardList = () => {\n        let url = window.location.href\n        //比对 url 和 cardList\n        for (let i = 0; i < this.state.cardList.length; i++) {\n            // url 中不存在此 card\n            if (url.indexOf(this.state.cardList[i]['card']['id']) < 0) {\n\n\n                // 删除 card\n                this.state.cardList.splice(i, 1)\n                this.setState({\n                    cardList: this.state.cardList\n                })\n\n            } else {\n                // url 中存在此 card\n                // continue\n            }\n\n        }\n\n    }\n\n    render() {\n        if (this.state.card === null || this.state.cardList.length === 0) {\n            return (<div>\n                <Nav />\n                <Loading />\n                <Footer />\n            </div>)\n        } else {\n\n            console.log(this.state.activeNote);\n\n            let card_list_dom = []\n\n            //如果屏幕宽度较小，则只显示 1 条笔记\n            if (windowWidth < minWidth) {\n\n                // 获取用户关注的笔记进行展示\n\n                let card = this.state.cardList[this.state.cardList.length - 1]\n\n                for (let k = 0; k < this.state.cardList.length; k++) {\n                    if (this.state.cardList[k]['card']['id'] === this.state.activeNote) {\n                        card = this.state.cardList[k]\n                        break;\n                    }\n                }\n\n                //设置笔记样式\n                // left = index*40px; right = index*-40-400\n                let note_style = {\n                    left: 0\n                }\n                card_list_dom.push(<Container style={note_style} key={card['card']['id']} handleHashChange={this.handleHashChange} handleLinkClick={this.handleLinkClick} card={card} />)\n            } else {\n                for (let i = 0; i < this.state.cardList.length; i++) {\n                    let card = this.state.cardList[i]\n\n                    //设置笔记样式\n                    // left = index*40px; right = index*-40-400\n                    let note_style = {\n                        left: i * 40 + 'px',\n                        flex: '0 0 auto'\n                    }\n\n                    let note = <Container style={note_style} key={card['card']['id']} handleHashChange={this.handleHashChange} handleLinkClick={this.handleLinkClick} card={card} />\n                    card_list_dom.push(note)\n                }\n            }\n\n            // 设置网页标题\n            for (let k = 0; k < this.state.cardList.length; k++) {\n                if (this.state.cardList[k]['card']['id'] === this.state.activeNote) {\n\n                    if (this.state.cardList[k]['card']['title'] !== 'About') {\n                        document.title = this.state.cardList[k]['card']['title']\n                    } else {\n                        document.title = 'Jiang 的数字花园🌱'\n                    }\n\n                    break;\n                }\n            }\n\n            // 监听 notes 容器滚动\n            if (document.getElementsByClassName('notes')[0] !== undefined) {\n\n                let notes = document.getElementsByClassName('container')\n                document.getElementsByClassName('notes')[0].addEventListener('scroll', function () {\n\n                    // 判断卡片的位置，当遮挡前 1 个卡片时，前 1 个卡片显示垂直标题\n                    for (let j = 0; j < notes.length; j++) {\n\n                        if (j === 0) {\n                            continue\n                        }\n\n                        // 小标题\n                        if (notes[j].getBoundingClientRect().x <= j * 40) {\n\n                            // 如果前一元素无标题\n                            if (notes[j - 1].classList.contains('mini') == false) {\n                                // 前一个元素显示垂直标题\n                                let note_title = document.createElement('div')\n                                note_title.classList.add('note_title')\n\n                                // 小标题文案\n                                if (notes[j - 1].getElementsByTagName('H1').length === 0) {\n                                    // 如果笔记中没有 H1 标题\n                                    note_title.innerHTML = notes[j - 1].innerText.substring(0, 6) + '...'\n                                } else {\n                                    note_title.innerHTML = notes[j - 1].getElementsByTagName('H1')[0].innerHTML\n                                }\n\n\n                                notes[j - 1].appendChild(note_title)\n\n                                notes[j - 1].classList.add('mini')\n                            }\n\n                        } else {\n\n                            let note_title = notes[j - 1].getElementsByClassName('note_title')[0]\n                            if (note_title !== undefined) {\n\n                                // 移除标题父级容器的类名标记\n                                notes[j - 1].classList.remove('mini')\n\n                                // 移除前一个元素的垂直标题\n                                notes[j - 1].removeChild(note_title)\n                            }\n\n                        }\n\n                        // 样式\n                        if (notes[j].getBoundingClientRect().x < notes[j - 1].getBoundingClientRect().x + notes[j - 1].getBoundingClientRect().width) {\n                            notes[j].classList.add('overlay')\n                        } else {\n                            notes[j].classList.remove('overlay')\n                        }\n\n                    }\n\n                })\n            }\n\n\n\n            return (<div className='notes_box'>\n\n                <Nav />\n                {/* <Container card={card} /> */}\n                <div className='notes'>\n                    {card_list_dom}\n                </div>\n\n                {/* <Footer /> */}\n\n            </div>)\n        }\n    }\n\n\n\n}\n\nexport default Post;","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/404.js",[],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Nav.js",[],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/BlogPost.js",["116","117","118","119","120"],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Container.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/page/PostList.js",["138","139","140","141","142"],[],"import React, { useState, useEffect, useRef, useUrlState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from '../components/Nav';\nimport BlogPost from '../components/BlogPost';\nimport Container from '../components/Container';\nimport Footer from '../components/Footer'\n\n// 笔记列表\nfunction PostList(props) {\n\n    document.title = props.title\n\n    useEffect(()=>{\n        // console.log('scrollTo(0, 0)');\n        window.scrollTo(0, 0);\n\n    })\n\n\n    return <div>\n\n        <Nav />\n        <BlogPost />\n        <Footer />\n\n    </div>\n\n\n}\n\nexport default PostList;","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/constantFunction.js",[],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/config.js",[],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Loading.js",["143","144","145","146","147","148","149","150","151"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport '../index.css'\n\n\nfunction Loading(props) {\n    let { slug } = useParams();\n    let [isLoading, setLoadingState] = useState(true)\n\n\n    return <div className='loading'><div>🚀 Loading...</div></div>\n    \n\n}\n\nexport default Loading;","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/footer.js",["152","153","154","155","156","157","158"],[],"/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/components/Footer.js",["159","160","161","162","163","164","165"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\n\nimport '../index.css'\n\n\nfunction Footer(props) {\n    let { slug } = useParams();\n\n    useEffect(() => {\n\n\n    })\n\n\n    return <div className='footer'><p></p></div>\n\n\n}\n\nexport default Footer;","/Users/jiangzilong/学习/minpg/Heptabase-Blog/src/hooks/useHash/index.js",["166"],[],{"ruleId":"167","severity":1,"message":"168","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":16},{"ruleId":"167","severity":1,"message":"171","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"177","line":10,"column":28,"nodeType":"169","messageId":"170","endLine":10,"endColumn":40},{"ruleId":"167","severity":1,"message":"178","line":10,"column":42,"nodeType":"169","messageId":"170","endLine":10,"endColumn":54},{"ruleId":"167","severity":1,"message":"179","line":16,"column":11,"nodeType":"169","messageId":"170","endLine":16,"endColumn":15},{"ruleId":"167","severity":1,"message":"180","line":30,"column":9,"nodeType":"169","messageId":"170","endLine":30,"endColumn":28},{"ruleId":"181","severity":1,"message":"182","line":36,"column":35,"nodeType":"183","messageId":"184","endLine":36,"endColumn":37},{"ruleId":"181","severity":1,"message":"182","line":47,"column":17,"nodeType":"183","messageId":"184","endLine":47,"endColumn":19},{"ruleId":"167","severity":1,"message":"185","line":48,"column":9,"nodeType":"169","messageId":"170","endLine":48,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":56,"column":17,"nodeType":"183","messageId":"184","endLine":56,"endColumn":19},{"ruleId":"167","severity":1,"message":"186","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"187","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"188","line":2,"column":56,"nodeType":"169","messageId":"170","endLine":2,"endColumn":65},{"ruleId":"167","severity":1,"message":"189","line":2,"column":67,"nodeType":"169","messageId":"170","endLine":2,"endColumn":78},{"ruleId":"167","severity":1,"message":"190","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"167","severity":1,"message":"191","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":12},{"ruleId":"167","severity":1,"message":"192","line":16,"column":8,"nodeType":"169","messageId":"170","endLine":16,"endColumn":15},{"ruleId":"181","severity":1,"message":"193","line":68,"column":52,"nodeType":"183","messageId":"184","endLine":68,"endColumn":54},{"ruleId":"181","severity":1,"message":"193","line":98,"column":25,"nodeType":"183","messageId":"184","endLine":98,"endColumn":27},{"ruleId":"181","severity":1,"message":"193","line":132,"column":32,"nodeType":"183","messageId":"184","endLine":132,"endColumn":34},{"ruleId":"181","severity":1,"message":"193","line":144,"column":28,"nodeType":"183","messageId":"184","endLine":144,"endColumn":30},{"ruleId":"181","severity":1,"message":"193","line":185,"column":36,"nodeType":"183","messageId":"184","endLine":185,"endColumn":38},{"ruleId":"181","severity":1,"message":"193","line":357,"column":73,"nodeType":"183","messageId":"184","endLine":357,"endColumn":75},{"ruleId":"167","severity":1,"message":"194","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":20},{"ruleId":"167","severity":1,"message":"195","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"193","line":46,"column":34,"nodeType":"183","messageId":"184","endLine":46,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":46,"column":63,"nodeType":"183","messageId":"184","endLine":46,"endColumn":65},{"ruleId":"181","severity":1,"message":"182","line":52,"column":23,"nodeType":"183","messageId":"184","endLine":52,"endColumn":25},{"ruleId":"167","severity":1,"message":"196","line":1,"column":46,"nodeType":"169","messageId":"170","endLine":1,"endColumn":57},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"188","line":2,"column":56,"nodeType":"169","messageId":"170","endLine":2,"endColumn":65},{"ruleId":"167","severity":1,"message":"197","line":22,"column":10,"nodeType":"169","messageId":"170","endLine":22,"endColumn":26},{"ruleId":"167","severity":1,"message":"177","line":22,"column":28,"nodeType":"169","messageId":"170","endLine":22,"endColumn":40},{"ruleId":"167","severity":1,"message":"178","line":22,"column":42,"nodeType":"169","messageId":"170","endLine":22,"endColumn":54},{"ruleId":"167","severity":1,"message":"198","line":23,"column":8,"nodeType":"169","messageId":"170","endLine":23,"endColumn":9},{"ruleId":"167","severity":1,"message":"199","line":43,"column":9,"nodeType":"169","messageId":"170","endLine":43,"endColumn":16},{"ruleId":"181","severity":1,"message":"193","line":53,"column":20,"nodeType":"183","messageId":"184","endLine":53,"endColumn":22},{"ruleId":"167","severity":1,"message":"200","line":77,"column":13,"nodeType":"169","messageId":"170","endLine":77,"endColumn":21},{"ruleId":"167","severity":1,"message":"201","line":108,"column":17,"nodeType":"169","messageId":"170","endLine":108,"endColumn":22},{"ruleId":"181","severity":1,"message":"193","line":113,"column":58,"nodeType":"183","messageId":"184","endLine":113,"endColumn":60},{"ruleId":"167","severity":1,"message":"202","line":169,"column":21,"nodeType":"169","messageId":"170","endLine":169,"endColumn":30},{"ruleId":"167","severity":1,"message":"201","line":189,"column":13,"nodeType":"169","messageId":"170","endLine":189,"endColumn":18},{"ruleId":"167","severity":1,"message":"186","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"196","line":1,"column":46,"nodeType":"169","messageId":"170","endLine":1,"endColumn":57},{"ruleId":"167","severity":1,"message":"176","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"203","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":17},{"ruleId":"167","severity":1,"message":"187","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"179","line":8,"column":11,"nodeType":"169","messageId":"170","endLine":8,"endColumn":15},{"ruleId":"167","severity":1,"message":"204","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":19},{"ruleId":"167","severity":1,"message":"205","line":9,"column":21,"nodeType":"169","messageId":"170","endLine":9,"endColumn":36},{"ruleId":"167","severity":1,"message":"186","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"179","line":8,"column":11,"nodeType":"169","messageId":"170","endLine":8,"endColumn":15},{"ruleId":"167","severity":1,"message":"186","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"172","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":2,"column":35,"nodeType":"169","messageId":"170","endLine":2,"endColumn":41},{"ruleId":"167","severity":1,"message":"175","line":2,"column":43,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"176","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"179","line":8,"column":11,"nodeType":"169","messageId":"170","endLine":8,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":18,"column":8,"nodeType":"208","endLine":18,"endColumn":10,"suggestions":"209"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'About' is defined but never used.","'useRef' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'getClearCard' is defined but never used.","'getClearImag' is defined but never used.","'slug' is assigned a value but never used.","'heptabase_blog_data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'content' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'useNavigate' is defined but never used.","'useLocation' is defined but never used.","'id' is defined but never used.","'useHash' is defined but never used.","Expected '===' and instead saw '=='.","'localStorage' is defined but never used.","'format' is defined but never used.","'useUrlState' is defined but never used.","'getHeptabaseData' is defined but never used.","'e' is defined but never used.","'path_id' is assigned a value but never used.","'pathname' is assigned a value but never used.","'links' is assigned a value but never used.","'last_note' is assigned a value but never used.","'Container' is defined but never used.","'isLoading' is assigned a value but never used.","'setLoadingState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleChangeEvent'. Either include it or remove the dependency array.","ArrayExpression",["210"],{"desc":"211","fix":"212"},"Update the dependencies array to be: [handleChangeEvent]",{"range":"213","text":"214"},[539,541],"[handleChangeEvent]"]